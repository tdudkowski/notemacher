{"version":3,"sources":["reportWebVitals.js","DataMongo.js","ListItemJSON.js","Form.js","FormEditMongo.js","FormAddMongo.js","Fetch.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DataMongo","obj","id","open","deleteMongoItem","blocksFromHTML","convertFromHTML","content","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","className","onClick","title","dateCreation","author","dateEdit","editor","readOnly","ListItemJSON","deleteIt","e","Form","x","y","addFunction","changeFunction","edit","add","close","i","Data","length","useState","createFromText","setEditorState","titleVal","setTitleVal","contentVal","setContentVal","addValues","handleSubmit","createEmpty","onChange","contentState","getCurrentContent","firstLine","getPlainText","contentChange","autoComplete","onSubmit","htmlFor","type","name","target","value","required","handleKeyCommand","command","newState","RichUtils","staticToolbarPlugin","createToolbarPlugin","Toolbar","plugins","FormEditMongo","changeMongoFn","editMongoTime","userMongoID","stateTitleVal","stateContentVal","stateToHTML","editorStyles","externalProps","FormAddMongo","addMongoFunction","FetchFn","data","setData","useEffect","a","fetch","weatherWroclaw","json","weatherWroclawData","Wroclaw","properties","timeseries","instant","details","air_temperature","weatherJerozolima","weatherJerozolimaData","Jerozolima","weatherTokio","weatherTokioData","Tokio","weatherAddisAbeba","weatherAddisAbebaData","AddisAbeba","fetchData","App","notesJSON","isEditOpenJSON","isEditOpenMongo","isCreateOpenMongo","isCreateOpenJSON","nbpdata","euro","dollar","ratio","stateContentJSONVal","stateContentMongoVal","stateTitleMongoVal","mongoDB","mongoDBArchive","searchValue","searchValueLength","openCreateJSON","setState","closeCreateJSON","openEdit","thisContent","filter","item","closeEdit","addItem","preventDefault","Date","toISOString","slice","hrEdit","toLocaleTimeString","aMoment","newItem","String","concat","prevState","push","reset","editItem","removeItem","splice","searchFunction","foundList","openCreateMongo","closeCreateMongo","closeEditMongo","addItemMongo","newMongoItem","axios","post","res","catch","error","console","log","openEditMongo","thisTitle","editItemMongo","changedMongoItem","_id","newStateNotes","put","removeItemMongo","delete","searchMongoFunction","searchData","toLowerCase","includes","itemContent","replaceAll","document","getElementsByClassName","classList","handleInput","remove","restoreList","searchInstant","response1","this","get","geld","rates","mid","map","href","placeholder","mongoNotes","array","changeFunctionMongo","Fetch","React","Component","ReactDOM","render","StrictMode","getElementById","module","hot","accept"],"mappings":"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","file":"static/js/main.4f06cdc0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Editor, EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst DataMongo = ({ obj, id, open, deleteMongoItem }) => {\n\n    const blocksFromHTML = convertFromHTML(obj.content);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const editorState = EditorState.createWithContent(state)\n\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {obj.id}</span>\n                    <button onClick={() => open(obj.id)}>edit</button>\n                    <button onClick={() => deleteMongoItem()}>delete</button>\n                </div>\n                <h4>{obj.title} </h4>\n                <p className=\"noteInfo\"><span>Created: {obj.dateCreation} by {obj.author}</span> | <span>{obj.dateEdit ? `Last edit: ${obj.dateEdit} by: ${obj.editor} ` : `unedited`}</span></p>\n            </header>\n            <Editor\n                editorState={editorState}\n                readOnly={true}\n            />\n        </div >\n    );\n}\n\nexport default DataMongo;","import PropTypes from \"prop-types\"\n\nconst ListItemJSON = ({ id, title, author, editor, dateCreation, dateEdit, content, open, deleteIt }) => {\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {id}</span>\n                    <button onClick={() => open(id)}>edit</button>\n                    <button onClick={(e) => deleteIt(id)}>delete</button>\n                </div>\n                <h4>{title}</h4>\n                <p className=\"noteInfo\"><span>Created: {dateCreation} by {author}</span> | <span>{dateEdit ? `Last edit: ${dateEdit} by: ${editor} ` : `unedited`}</span></p>\n            </header>\n            <div className=\"content\">{content}</div>\n        </div >\n    )\n}\n\nListItemJSON.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n}\nexport default ListItemJSON","import { useState } from \"react\"\nimport Data from './notesArrayJSON.json'\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst Form = ({ addFunction, changeFunction, edit, add, close, id }) => {\n\n    let x, y\n\n    if (edit) {\n        for (let i = 0; i < Data.length; i++) {\n            if (Data[i].id === id) {\n                x = Data[i].title\n                y = Data[i].content\n            }\n        }\n    } else {\n        x = \"\"\n        y = \"\"\n    }\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(ContentState.createFromText(y)))\n    const [titleVal, setTitleVal] = useState(x)\n    const [contentVal, setContentVal] = useState(y)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n\n        let firstLine = contentState.getPlainText('\\u000A')\n        setContentVal(firstLine)\n        setEditorState(editorState)\n    }\n\n    const resetState = () => {\n        setTitleVal(\"\")\n        setContentVal(\"\")\n        setEditorState(() => EditorState.createEmpty())\n    }\n\n    const addValues = (e, id) => {\n        changeFunction(e, id, titleVal, contentVal)\n        close()\n    }\n\n    const handleSubmit = (e, contentVal) => {\n        if (edit) {\n            addValues(e, id, contentVal)\n            setEditorState(contentVal)\n        }\n        else {\n            addFunction(e, contentVal)\n            resetState()\n        }\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button className=\"big\" type=\"submit\">{add ? \"ADD\" : \"SAVE\"}</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import { useState } from \"react\"\nimport { EditorState, RichUtils, ContentState, convertFromHTML } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormEditMongo = ({ changeMongoFn, id, close, editMongoTime, userMongoID, stateTitleVal, stateContentVal }) => {\n    const blocksFromHTML = convertFromHTML(stateContentVal);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state))\n    const [titleVal, setTitleVal] = useState(stateTitleVal)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const onChange = (editorState) => {\n        setEditorState(editorState);\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n    }\n\n    const handleSubmit = (e, titleVal) => {\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n        changeMongoFn(e, id, titleVal, stateContentVal, editMongoTime, userMongoID);\n        close()\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    // focus = () => { editor.focus(); };\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal)}>\n            <label htmlFor=\"title\">{\"Title of [ \" + id + \" ]\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n            <button className=\"big\" type=\"submit\">SAVE</button>\n            <h4>Result of EDIT</h4>\n            <p>Title: {titleVal}</p>\n            <p>Edit time: {editMongoTime}</p>\n            <p>Editor: {userMongoID}</p>\n        </form>\n    )\n}\n\nexport default FormEditMongo","import { useState } from \"react\"\nimport { EditorState, RichUtils } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormAddMongo = ({ addMongoFunction, edit, close, id }) => {\n\n    const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n    const [titleVal, setTitleVal] = useState(\"\")\n    const [contentVal, setContentVal] = useState(\"\")\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n        let content = stateToHTML(contentState)\n        setContentVal(content)\n        setEditorState(editorState)\n    }\n\n    const handleSubmit = (e, titleVal, contentVal) => {\n        addMongoFunction(e, titleVal, contentVal)\n        close()\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n\n            <button className=\"big\" type=\"submit\">ADD</button>\n\n        </form>\n    )\n}\n\nexport default FormAddMongo","import { useState, useEffect } from \"react\"\n\nconst FetchFn = () => {\n    const [data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const weatherWroclaw = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=51.06&lon=17.01')\n            const weatherWroclawData = await weatherWroclaw.json()\n            const Wroclaw = weatherWroclawData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherJerozolima = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=31.47&lon=35.13')\n            const weatherJerozolimaData = await weatherJerozolima.json()\n            const Jerozolima = weatherJerozolimaData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherTokio = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=35.41&lon=139.41')\n            const weatherTokioData = await weatherTokio.json()\n            const Tokio = weatherTokioData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherAddisAbeba = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=9.1&lon=38.44')\n            const weatherAddisAbebaData = await weatherAddisAbeba.json()\n            const AddisAbeba = weatherAddisAbebaData.properties.timeseries[0].data.instant.details.air_temperature\n            setData([Wroclaw, Jerozolima, Tokio, AddisAbeba])\n        }\n        fetchData()\n    }, [])\n\n    return (<>\n\n        <p>(functional component w/ hooks useState and useEffect) Data fetched from Meteorologisk institutt:</p>\n\n        <table className=\"tableFetch\">\n            <thead><tr><th>City</th><th>Temperature now</th></tr></thead>\n            <tbody>\n                <tr><td>Wrocław</td><td>{data[0]} °C</td></tr>\n                <tr><td>יְרוּשָׁלַיִם‎</td><td>{data[1]} °C</td></tr>\n                <tr><td>東京</td><td>{data[2]} °C</td></tr>\n                <tr><td>አዲስ አበባ</td><td>{data[3]} °C</td></tr>\n            </tbody>\n        </table>\n    </>)\n}\nexport default FetchFn","import React from \"react\"\nimport axios from 'axios'\nimport DataMongo from \"./DataMongo\"\nimport ListItemJSON from \"./ListItemJSON\"\nimport Form from \"./Form\"\nimport FormEditMongo from \"./FormEditMongo\"\nimport FormAddMongo from \"./FormAddMongo\"\nimport Data from './notesArrayJSON.json'\nimport FetchFn from \"./Fetch\"\nimport \"./style.css\"\n\nclass App extends React.Component {\n\n  state = {\n    notesJSON: [...Data],\n    isEditOpenJSON: false,\n    isEditOpenMongo: false,\n    isCreateOpenMongo: false,\n    isCreateOpenJSON: false,\n    id: \"\",\n    nbpdata: null,\n    euro: null,\n    dollar: null,\n    ratio: null,\n    stateContentJSONVal: null,\n    stateContentMongoVal: null,\n    stateTitleMongoVal: null,\n    editMongoTime: null,\n    userMongoID: null,\n    mongoDB: [],\n    mongoDBArchive: [],\n    searchValue: null,\n    searchValueLength: 0,\n  }\n\n  async componentDidMount() {\n    const response1 = await fetch('https://api.nbp.pl/api/exchangerates/tables/a')\n\n    if (this.searchValueLength === 0) {\n      axios.get('https://notemacher.herokuapp.com/notes')\n        // axios.get('http://localhost:5000/notes')\n\n        .then(res => {\n          this.setState({ mongoDB: [...res.data], mongoDBArchive: [...res.data], });\n        })\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidMount: \", error);\n        })\n    }\n    const geld = await response1.json()\n\n    this.setState({\n      nbpdata: [...geld],\n      euro: [...geld][0].rates[7].mid,\n      dollar: [...geld][0].rates[1].mid,\n    })\n  }\n\n  async componentDidUpdate() {\n    if (this.state.searchValueLength === 0) {\n      axios.get('https://notemacher.herokuapp.com/notes')\n        // axios.get('http://localhost:5000/notes')\n        .then(res => {\n          this.setState({ mongoDB: [...res.data], mongoDBArchive: [...res.data], });\n        })\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidUpdate: \", error);\n        })\n    }\n  }\n\n  /*--- JSON ----*/\n\n  /* OPEN CREATE JSON */\n  openCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: true,\n    })\n  }\n\n  /* CLOSE CREATE JSON */\n  closeCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: false,\n    })\n  }\n\n  /* OPEN EDIT JSON */\n  openEdit = (id) => {\n    const thisContent = this.state.notesJSON.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpenJSON: true,\n      id: id,\n      stateContentJSONVal: thisContent\n    })\n  }\n\n  /* CLOSE EDIT JSON */\n  closeEdit = () => {\n    this.setState({\n      isEditOpenJSON: false,\n    })\n  }\n\n  /* ADD JSON */\n  addItem = (e, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newItem = {\n      id: String(e.target[0].value.slice(0, 10).concat(Data.length + 1)),\n      dateCreation: aMoment,\n      title: e.target[0].value,\n      content: contentVal,\n      author: e.target[0].author || \"anon\"\n    }\n\n    this.setState(prevState => ({\n      notesJSON: [...prevState.notesJSON, newItem],\n      isCreateOpenJSON: false,\n    }))\n    Data.push(newItem)\n    e.target.reset()\n  }\n\n  /* EDIT JSON */\n  editItem = (e, id, titleVal, contentVal) => {\n    e.preventDefault()\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data[i].dateEdit = aMoment\n        Data[i].title = titleVal\n        Data[i].content = contentVal\n        Data[i].editor = e.target[0].editor || \"anon\"\n      }\n    }\n    this.setState({\n      notesJSON: [...Data],\n    })\n  }\n\n  /* REMOVE JSON */\n  removeItem = (id) => {\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data.splice(i, 1)\n      }\n    }\n    this.setState({ notesJSON: [...Data] })\n  }\n\n  /* SEARCH JSON */\n  searchFunction = (foundList) => {\n    this.setState({\n      notesJSON: foundList\n    })\n  }\n\n  /*--- MONGO ---*/\n\n  /* MONGO LIST */\n  mongoNotes() {\n    if (this.state.searchValueLength) {\n      return this.state.searchValue.map((data, id) => {\n        return <DataMongo obj={data} key={id} open={this.openEditMongo}\n          deleteMongoItem={() => this.removeItemMongo(data)} />\n      });\n    }\n    else {\n      return this.state.mongoDB.map((data, id) => {\n        return <DataMongo obj={data} key={id} open={this.openEditMongo}\n          deleteMongoItem={() => this.removeItemMongo(data)} />\n      });\n    }\n  }\n\n  /* OPEN CREATE MONGO */\n  openCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: true,\n    })\n  }\n\n  /* CLOSE CREATE MONGO */\n  closeCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* CLOSE EDIT MONGO */\n  closeEditMongo = () => {\n    this.setState({\n      isEditOpenMongo: false,\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* ADD MONGO */\n  addItemMongo = (e, titleVal, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newMongoItem = {\n      id: String(titleVal.slice(0, 10).concat(this.state.mongoDB.length + 1)),\n      dateCreation: aMoment,\n      title: titleVal,\n      content: contentVal,\n      author: \"anon\"\n    }\n\n    axios.post('https://notemacher.herokuapp.com/notes', newMongoItem)\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT APP AAD MONGO NOTE\", error);\n      })\n\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* OPEN EDIT MONGO */\n  openEditMongo = (id) => {\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    const thisUser = \"anon\"\n    const thisTitle = this.state.mongoDB.filter(item => item.id === id)[0].title\n    const thisContent = this.state.mongoDB.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpenMongo: true,\n      id: id,\n      stateTitleMongoVal: thisTitle,\n      stateContentMongoVal: thisContent,\n      editMongoTime: aMoment,\n      userMongoID: thisUser,\n    })\n  }\n\n  /* SAVE EDITED MONGO */\n  editItemMongo = (e, id, titleVal, contentVal, editMongoTime, userMongoID) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    for (let i = 0; i < this.state.mongoDB.length; i++) {\n      if (this.state.mongoDB[i].id === id) {\n        const changedMongoItem = {\n          _id: this.state.mongoDB[i]._id,\n          id: this.state.mongoDB[i].id,\n          dateCreation: this.state.mongoDB[i].dateCreation,\n          author: this.state.mongoDB[i].author,\n          dateEdit: aMoment,\n          title: titleVal,\n          content: contentVal,\n          editor: \"anon\"\n        }\n\n        const newStateNotes = this.state.mongoDB\n        newStateNotes.splice(i, 1, changedMongoItem)\n\n        this.setState({\n          mongoDB: newStateNotes,\n          isCreateOpenMongo: false,\n        })\n\n        axios.put('https://notemacher.herokuapp.com/notes', changedMongoItem)\n          .then(res => {\n            // this.setState({ mongoDB: [...newMongoItem] });\n          })\n          .catch(function (error) {\n            console.log(\"ERROR IN REACT EDIT MONGO NOTE\", error);\n          })\n      }\n    }\n  }\n\n  /* REMOVE MONGO */\n  removeItemMongo = (data) => {\n    axios.delete('https://notemacher.herokuapp.com/notes', { data })\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT REMOVE MONGO NOTE\", error);\n      })\n  }\n\n  /* SEARCH MONGO */\n  // https://stackoverflow.com/questions/37401635/react-js-wait-for-setstate-to-finish-before-triggering-a-function\n  // https://stackoverflow.com/questions/3790681/regular-expression-to-remove-html-tags\n  // https://digitalfortress.tech/tricks/top-15-commonly-used-regex/\n  searchMongoFunction = (e) => {\n    e.preventDefault()\n\n    const removedHTML = (itemContent) => itemContent.toLowerCase().replaceAll(/<\\/?[\\w\\s]*>|<.+[\\W]>/g, \"\")\n    const searchData = this.state.mongoDBArchive.filter(obj => obj.title.toLowerCase().includes(e.target[0].value.toLowerCase()) || removedHTML(obj.content).includes(e.target[0].value.toLowerCase()))\n\n    this.setState({\n      searchValueLength: e.target[0].value.length,\n      mongoDB: searchData,\n      searchValue: searchData,\n    })\n    document.getElementsByClassName(\"searchResult\")[0].classList.add(\"result\")\n  }\n\n  handleInput = (e) => {\n    if (e.target.value.length === 0) {\n      this.setState({\n        searchValueLength: 0,\n      },\n        document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\"))\n    }\n  }\n\n  restoreList = () => {\n    this.setState({\n      searchValueLength: 0,\n      mongoDB: this.state.mongoDBArchive,\n    })\n    document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\")\n  }\n\n  searchInstant = (e) => {\n\n    const removedHTML = (itemContent) => itemContent.toLowerCase().replaceAll(/<\\/?[\\w\\s]*>|<.+[\\W]>/g, \"\")\n    const searchData = this.state.mongoDBArchive.filter(obj => obj.title.toLowerCase().includes(e.target.value.toLowerCase()) || removedHTML(obj.content).includes(e.target.value.toLowerCase()))\n\n    this.setState({\n      searchValueLength: e.target.value.length,\n      mongoDB: searchData,\n      searchValue: searchData,\n    })\n\n    if (e.target.value.length === 0) { document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\") }\n    else {\n      document.getElementsByClassName(\"searchResult\")[0].classList.add(\"result\")\n    }\n    return searchData\n  }\n  /*--- APP BODY ---*/\n\n  render() {\n    const { isEditOpenJSON, isEditOpenMongo, isCreateOpenMongo, isCreateOpenJSON } = this.state\n\n    return (\n      <>\n        <header className=\"header\">\n          <h2>_notemacher</h2>\n          <nav className=\"navgh\">\n            <ul>\n              <li><a href=\"https://tdudkowski.github.io/\">[ to Github Page ]</a></li>\n              <li><a href=\"https://github.com/tdudkowski/notemacher\">[ repo of _notemacher ]</a></li>\n            </ul>\n            <ul>\n              <li><button onClick={this.openCreateJSON}>ADD JSON Note</button></li>\n              <li><button onClick={this.openCreateMongo}>ADD mongoDB Note</button></li>\n            </ul>\n          </nav>\n          <div className=\"search\">\n            <form onSubmit={(e) => this.searchMongoFunction(e)}>\n              <input type=\"text\" name=\"clickit\" id=\"clickit\" placeholder=\"search Mongo\"\n                onChange={this.handleInput}\n              />\n              <button className=\"big\" type=\"submit\">SEARCH</button>\n            </form>\n            <div>\n              <input type=\"text\" name=\"instant\" id=\"instant\" placeholder=\"search Mongo\"\n                onChange={(e) => this.searchInstant(e)}\n              />\n              <h3>type to search</h3>\n            </div></div>\n        </header>\n        <main>\n          <article className=\"listNotes\">\n            <h3>MongoDB Notes <span>(number of Notes: {this.state.mongoDBArchive.length})</span></h3>\n            <div className=\"searchResult\">\n              {this.state.searchValueLength ? <div><h4>Search mode</h4>\n                <p>Till <strong>search mode</strong> is on, you can add, remove, and edit notes, but with no visible effect. To close search mode you should empty both input fields or click the button below 'restore list'.</p>\n                <p>The search returned {this.mongoNotes().length} items | <button className=\"big\" onClick={this.restoreList}>Restore list</button></p></div> : null}\n\n              {this.state.mongoDB.length ? this.mongoNotes() : <div className=\"infoOnMongo\">\n                <p>If you are seeing this info, there're a few possibilities:</p>\n                <ul>\n                  <li>Notes are not yet loaded, connection to database usually takes a moment (but not enough long to read it comfortably)</li>\n                  <li>Database is empty now, in this case please use \"ADD mongoDB Note\" button to create one</li>\n                </ul>\n              </div>}\n            </div>\n\n            <hr />\n\n            <h3>JSON Notes <span>(number of Notes: {this.state.notesJSON.length})</span></h3>\n\n            {this.state.notesJSON.map(item => (\n              <ListItemJSON key={item.id} {...item} open={this.openEdit} deleteIt={this.removeItem} />\n            ))}\n\n          </article>\n\n          {isEditOpenJSON && <div className=\"edit\">\n            <header>\n              <h3>Edit JSON Note - note id: {this.state.id}</h3>\n              <button className=\"big\" onClick={this.closeEdit}>CLOSE</button>\n            </header>\n            <Form edit id={this.state.id} changeFunction={this.editItem} array={this.state.notesJSON}\n              stateContentJSONVal={this.state.stateContentJSONVal} close={this.closeEdit} />\n          </div>}\n\n\n          {isCreateOpenJSON && <div className=\"edit\">\n            <header><h3>Add a JSON note</h3>\n              <button className=\"big\" onClick={this.closeCreateJSON}>CLOSE</button>\n            </header>\n            <Form add addFunction={this.addItem} />\n          </div>}\n\n\n          {isEditOpenMongo && <div className=\"edit\">\n            <header>\n              <h3>Edit Mongo - note id: {this.state.id}</h3>\n              <button className=\"big\" onClick={this.closeEditMongo}>CLOSE</button>\n            </header>\n            <FormEditMongo\n              edit\n              id={this.state.id}\n              changeFunctionMongo={this.editItemMongo}\n              changeMongoFn={this.editItemMongo}\n              array={this.state.mongoDB}\n              stateTitleVal={this.state.stateTitleMongoVal}\n              stateContentVal={this.state.stateContentMongoVal}\n              editMongoTime={this.state.editMongoTime}\n              userMongoID={this.state.userMongoID}\n              close={this.closeEditMongo}\n            />\n          </div>}\n\n          {isCreateOpenMongo && <div className=\"edit\">\n            <header><h3>Add a Mongo Note</h3>\n              <button className=\"big\" onClick={this.closeCreateMongo}>CLOSE</button>\n            </header>\n            <FormAddMongo addMongoFunction={this.addItemMongo} close={this.closeEditMongo} />\n          </div>}\n\n          <aside>\n\n            <h3>_notemacher</h3>\n            <p>Everything seems fine now. All functions of creating, deleting, and editing Notes are OK; searching works well in scope of one line - the same as in most usercases.</p>\n            <p>Two kinds of Notes:</p>\n            <ul>\n              <li><strong>mongoDB Notes</strong> from mongoDB Atlas served by Node.js API</li>\n              <li><strong>JSON Notes</strong> (below hr line) kept in local React file. I've started from it, but now they are kept only for a testing purposes.</li>\n            </ul>\n\n            <p>Stack:</p>\n            <ul>\n              <li>Draft.js</li>\n              <li>React 17 + hooks (Github)</li>\n              <li>async, fetch, axios</li>\n              <li>Node.js + Express (Heroku)</li>\n              <li>mongoDB (MongoDB Atlas)</li>\n            </ul>\n            <hr />\n            <h3>Fetch</h3>\n            <p>(state component) Data fetched from NBP API, ratio to Polish PLN</p>\n\n            <table className=\"tableFetch\">\n              <thead><tr><th>Currency</th><th>Ratio</th></tr></thead>\n              <tbody>\n                <tr><td>Euro</td><td>{this.state.euro}</td></tr>\n                <tr><td>US Dollar</td><td>{this.state.dollar}</td></tr>\n              </tbody>\n            </table>\n\n            <FetchFn />\n          </aside>\n        </main>\n        <footer>\n          <p>\n            _notemacher @2020\n          </p>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nmodule.hot.accept();\n\nreportWebVitals();\n"],"sourceRoot":""}