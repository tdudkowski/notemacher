{"version":3,"sources":["reportWebVitals.js","DataMongo.js","ListItemJSON.js","Form.js","FormEditMongo.js","FormAddMongo.js","Fetch.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DataMongo","obj","id","open","deleteMongoItem","blocksFromHTML","convertFromHTML","content","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","className","onClick","title","dateCreation","author","dateEdit","editor","readOnly","ListItemJSON","deleteIt","e","Form","x","y","addFunction","changeFunction","edit","add","close","i","Data","length","useState","createFromText","setEditorState","titleVal","setTitleVal","contentVal","setContentVal","addValues","handleSubmit","createEmpty","onChange","contentState","getCurrentContent","firstLine","getPlainText","contentChange","autoComplete","onSubmit","htmlFor","type","name","target","value","required","handleKeyCommand","command","newState","RichUtils","staticToolbarPlugin","createToolbarPlugin","Toolbar","plugins","FormEditMongo","changeMongoFn","editMongoTime","userMongoID","stateTitleVal","stateContentVal","stateToHTML","editorStyles","externalProps","FormAddMongo","addMongoFunction","FetchFn","data","setData","useEffect","a","fetch","weatherWroclaw","json","weatherWroclawData","Wroclaw","properties","timeseries","instant","details","air_temperature","weatherJerozolima","weatherJerozolimaData","Jerozolima","weatherTokio","weatherTokioData","Tokio","weatherAddisAbeba","weatherAddisAbebaData","AddisAbeba","fetchData","App","notesJSON","isEditOpen","isEditOpenMongo","isCreateOpenMongo","isCreateOpenJSON","nbpdata","euro","dollar","ratio","temperatureInWroclaw","stateContentMongoVal","stateTitleMongoVal","mongoDB","searchValue","testo","openCreateJSON","setState","closeCreateJSON","openEdit","thisContent","filter","item","closeEdit","addItem","preventDefault","Date","toISOString","slice","hrEdit","toLocaleTimeString","aMoment","newItem","String","concat","prevState","push","reset","editItem","removeItem","splice","searchFunction","foundList","openCreateMongo","closeCreateMongo","closeEditMongo","addItemMongo","newMongoItem","axios","post","res","catch","error","console","log","openEditMongo","thisTitle","editItemMongo","changedMongoItem","_id","newStateNotes","put","removeItemMongo","delete","searchMongoFunction","get","toLowerCase","includes","response1","this","geld","rates","mid","map","href","placeholder","mongoNotes","array","changeFunctionMongo","Fetch","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","hot","accept"],"mappings":"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","file":"static/js/main.e9dfb4f9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Editor, EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst DataMongo = ({ obj, id, open, deleteMongoItem }) => {\n\n    const blocksFromHTML = convertFromHTML(obj.content);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const editorState = EditorState.createWithContent(state)\n\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {obj.id}</span>\n                    <button onClick={() => open(obj.id)}>edit</button>\n                    <button onClick={() => deleteMongoItem()}>delete</button>\n                </div>\n                <h4>{obj.title} </h4>\n                <p className=\"noteInfo\"><span>Created: {obj.dateCreation} by {obj.author}</span> | <span>{obj.dateEdit ? `Last edit: ${obj.dateEdit} by: ${obj.editor} ` : `unedited`}</span></p>\n            </header>\n            <Editor\n                editorState={editorState}\n                readOnly={true}\n            />\n        </div >\n    );\n}\n\nexport default DataMongo;","import PropTypes from \"prop-types\"\n\nconst ListItemJSON = ({ id, title, author, editor, dateCreation, dateEdit, content, open, deleteIt }) => {\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {id}</span>\n                    <button onClick={() => open(id)}>edit</button>\n                    <button onClick={(e) => deleteIt(id)}>delete</button>\n                </div>\n                <h4>{title}</h4>\n                <p className=\"noteInfo\"><span>Created: {dateCreation} by {author}</span> | <span>{dateEdit ? `Last edit: ${dateEdit} by: ${editor} ` : `unedited`}</span></p>\n            </header>\n            <div className=\"content\">{content}</div>\n        </div >\n    )\n}\n\nListItemJSON.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n}\nexport default ListItemJSON","import { useState } from \"react\"\nimport Data from './notesArrayJSON.json'\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst Form = ({ addFunction, changeFunction, edit, add, close, id }) => {\n\n    let x, y\n\n    if (edit) {\n        for (let i = 0; i < Data.length; i++) {\n            if (Data[i].id === id) {\n                x = Data[i].title\n                y = Data[i].content\n            }\n        }\n    } else {\n        x = \"\"\n        y = \"\"\n    }\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(ContentState.createFromText(y)))\n    const [titleVal, setTitleVal] = useState(x)\n    const [contentVal, setContentVal] = useState(y)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n\n        let firstLine = contentState.getPlainText('\\u000A')\n        setContentVal(firstLine)\n        setEditorState(editorState)\n    }\n\n    const resetState = () => {\n        setTitleVal(\"\")\n        setContentVal(\"\")\n        setEditorState(() => EditorState.createEmpty())\n    }\n\n    const addValues = (e, id) => {\n        changeFunction(e, id, titleVal, contentVal)\n        close()\n    }\n\n    const handleSubmit = (e, contentVal) => {\n        if (edit) {\n            addValues(e, id, contentVal)\n            setEditorState(contentVal)\n        }\n        else {\n            addFunction(e, contentVal)\n            resetState()\n        }\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button type=\"submit\">{add ? \"ADD\" : \"SAVE\"}</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import { useState } from \"react\"\nimport { EditorState, RichUtils, ContentState, convertFromHTML } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormEditMongo = ({ changeMongoFn, id, close, editMongoTime, userMongoID, stateTitleVal, stateContentVal }) => {\n    const blocksFromHTML = convertFromHTML(stateContentVal);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state))\n    const [titleVal, setTitleVal] = useState(stateTitleVal)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const onChange = (editorState) => {\n        setEditorState(editorState);\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n    }\n\n    const handleSubmit = (e, titleVal) => {\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n        changeMongoFn(e, id, titleVal, stateContentVal, editMongoTime, userMongoID);\n        close()\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    // focus = () => { editor.focus(); };\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal)}>\n            <label htmlFor=\"title\">{\"Title of [ \" + id + \" ]\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n            <button className=\"big\" type=\"submit\">SAVE</button>\n            <h4>Result of EDIT</h4>\n            <p>Title: {titleVal}</p>\n            <p>Edit time: {editMongoTime}</p>\n            <p>Editor: {userMongoID}</p>\n        </form>\n    )\n}\n\nexport default FormEditMongo","import { useState } from \"react\"\nimport { EditorState, RichUtils } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormAddMongo = ({ addMongoFunction, edit, close, id }) => {\n\n    const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n    const [titleVal, setTitleVal] = useState(\"\")\n    const [contentVal, setContentVal] = useState(\"\")\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n        let content = stateToHTML(contentState)\n        setContentVal(content)\n        setEditorState(editorState)\n    }\n\n    const handleSubmit = (e, titleVal, contentVal) => {\n        addMongoFunction(e, titleVal, contentVal)\n        close()\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n\n            <button className=\"big\" type=\"submit\">ADD</button>\n\n        </form>\n    )\n}\n\nexport default FormAddMongo","import { useState, useEffect } from \"react\"\n\nconst FetchFn = () => {\n    const [data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const weatherWroclaw = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=51.06&lon=17.01')\n            const weatherWroclawData = await weatherWroclaw.json()\n            const Wroclaw = weatherWroclawData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherJerozolima = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=31.47&lon=35.13')\n            const weatherJerozolimaData = await weatherJerozolima.json()\n            const Jerozolima = weatherJerozolimaData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherTokio = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=35.41&lon=139.41')\n            const weatherTokioData = await weatherTokio.json()\n            const Tokio = weatherTokioData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherAddisAbeba = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=9.1&lon=38.44')\n            const weatherAddisAbebaData = await weatherAddisAbeba.json()\n            const AddisAbeba = weatherAddisAbebaData.properties.timeseries[0].data.instant.details.air_temperature\n            setData([Wroclaw, Jerozolima, Tokio, AddisAbeba])\n        }\n        fetchData()\n    }, [])\n\n    return (<>\n\n        <p>(functional component w/ hooks useState and useEffect) Data fetched from Meteorologisk institutt:</p>\n\n        <table className=\"tableFetch\">\n            <tr><th>City</th><th>Temperature now</th></tr>\n            <tr><td>Wrocław</td><td>{data[0]} °C</td></tr>\n            <tr><td>יְרוּשָׁלַיִם‎</td><td>{data[1]} °C</td></tr>\n            <tr><td>東京</td><td>{data[2]} °C</td></tr>\n            <tr><td>አዲስ አበባ</td><td>{data[3]} °C</td></tr>\n        </table>\n    </>)\n}\nexport default FetchFn","import React from \"react\"\nimport axios from 'axios'\nimport DataMongo from \"./DataMongo\"\nimport ListItemJSON from \"./ListItemJSON\"\nimport Form from \"./Form\"\nimport FormEditMongo from \"./FormEditMongo\"\nimport FormAddMongo from \"./FormAddMongo\"\nimport Data from './notesArrayJSON.json'\nimport FetchFn from \"./Fetch\"\nimport \"./style.css\"\n\n// export const BASE_API_URL = ''\n\nclass App extends React.Component {\n\n  state = {\n    notesJSON: [...Data],\n    isEditOpen: false,\n    isEditOpenMongo: false,\n    isCreateOpenMongo: false,\n    isCreateOpenJSON: false,\n    id: \"\",\n    nbpdata: null,\n    euro: null,\n    dollar: null,\n    ratio: null,\n    temperatureInWroclaw: null,\n    stateContentVal: null,\n    stateContentMongoVal: null,\n    stateTitleMongoVal: null,\n    editMongoTime: null,\n    userMongoID: null,\n    mongoDB: [],\n    searchValue: 0,\n    testo: null\n  }\n\n  async componentDidMount() {\n    const response1 = await fetch('https://api.nbp.pl/api/exchangerates/tables/a')\n\n    if (this.searchValue === 0) {\n      axios.get('https://notemacher.herokuapp.com/notes')\n        // axios.get('http://localhost:5000/notes')\n\n        .then(res => {\n          this.setState({ mongoDB: [...res.data] });\n        })\n        .then(console.log(\"componentMounted\"))\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidMount: \", error);\n        })\n    }\n    const geld = await response1.json()\n\n    this.setState({\n      nbpdata: [...geld],\n      euro: [...geld][0].rates[7].mid,\n      dollar: [...geld][0].rates[1].mid,\n    })\n  }\n\n  async componentDidUpdate() {\n    if (this.state.searchValue === 0) {\n      axios.get('https://notemacher.herokuapp.com/notes')\n        // axios.get('http://localhost:5000/notes')\n        .then(res => {\n          this.setState({ mongoDB: [...res.data] });\n        })\n        .then(console.log(\"componentUpdated\"))\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidUpdate: \", error);\n        })\n    }\n  }\n\n  /*--- JSON ----*/\n\n  /* OPEN CREATE JSON */\n  openCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: true,\n    })\n  }\n\n  /* CLOSE CREATE JSON */\n  closeCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: false,\n    })\n  }\n\n  /* OPEN EDIT JSON */\n  openEdit = (id) => {\n    const thisContent = this.state.notesJSON.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpen: true,\n      id: id,\n      stateContentVal: thisContent\n    })\n  }\n\n  /* CLOSE EDIT JSON */\n  closeEdit = () => {\n    this.setState({\n      isEditOpen: false,\n    })\n  }\n\n  /* ADD JSON */\n  addItem = (e, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newItem = {\n      id: String(e.target[0].value.slice(0, 10).concat(Data.length + 1)),\n      dateCreation: aMoment,\n      title: e.target[0].value,\n      content: contentVal,\n      author: e.target[0].author || \"anon\"\n    }\n\n    this.setState(prevState => ({\n      notesJSON: [...prevState.notesJSON, newItem],\n      isCreateOpenJSON: false,\n    }))\n    Data.push(newItem)\n    e.target.reset()\n  }\n\n  /* EDIT JSON */\n  editItem = (e, id, titleVal, contentVal) => {\n    e.preventDefault()\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data[i].dateEdit = aMoment\n        Data[i].title = titleVal\n        Data[i].content = contentVal\n        Data[i].editor = e.target[0].editor || \"anon\"\n      }\n    }\n    this.setState({\n      notesJSON: [...Data],\n    })\n  }\n\n  /* REMOVE JSON */\n  removeItem = (id) => {\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data.splice(i, 1)\n      }\n    }\n    this.setState({ notesJSON: [...Data] })\n  }\n\n  /* SEARCH JSON */\n  searchFunction = (foundList) => {\n    this.setState({\n      notesJSON: foundList\n    })\n  }\n\n  /*--- MONGO ---*/\n\n  /* MONGO LIST */\n  mongoNotes() {\n    return this.state.mongoDB.map((data, id) => {\n      return <DataMongo obj={data} key={id} open={this.openEditMongo}\n        deleteMongoItem={() => this.removeItemMongo(data)} />\n    });\n  }\n\n  /* OPEN CREATE MONGO */\n  openCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: true,\n    })\n  }\n\n  /* CLOSE CREATE MONGO */\n  closeCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* CLOSE EDIT MONGO */\n  closeEditMongo = () => {\n    this.setState({\n      isEditOpenMongo: false,\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* ADD MONGO */\n  addItemMongo = (e, titleVal, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newMongoItem = {\n      id: String(titleVal.slice(0, 10).concat(this.state.mongoDB.length + 1)),\n      dateCreation: aMoment,\n      title: titleVal,\n      content: contentVal,\n      author: \"anon\"\n    }\n\n    axios.post('https://notemacher.herokuapp.com/notes', newMongoItem)\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT APP AAD MONGO NOTE\", error);\n      })\n\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* OPEN EDIT MONGO */\n  openEditMongo = (id) => {\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    const thisUser = \"anon\"\n    const thisTitle = this.state.mongoDB.filter(item => item.id === id)[0].title\n    const thisContent = this.state.mongoDB.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpenMongo: true,\n      id: id,\n      stateTitleMongoVal: thisTitle,\n      stateContentMongoVal: thisContent,\n      editMongoTime: aMoment,\n      userMongoID: thisUser,\n    })\n  }\n\n  /* SAVE EDITED MONGO */\n  editItemMongo = (e, id, titleVal, contentVal, editMongoTime, userMongoID) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    for (let i = 0; i < this.state.mongoDB.length; i++) {\n      if (this.state.mongoDB[i].id === id) {\n        const changedMongoItem = {\n          _id: this.state.mongoDB[i]._id,\n          id: this.state.mongoDB[i].id,\n          dateCreation: this.state.mongoDB[i].dateCreation,\n          author: this.state.mongoDB[i].author,\n          dateEdit: aMoment,\n          title: titleVal,\n          content: contentVal,\n          editor: \"anon\"\n        }\n\n        const newStateNotes = this.state.mongoDB\n        newStateNotes.splice(i, 1, changedMongoItem)\n\n        this.setState({\n          mongoDB: newStateNotes,\n          isCreateOpenMongo: false,\n        })\n\n        axios.put('https://notemacher.herokuapp.com/notes', changedMongoItem)\n          .then(res => {\n            // this.setState({ mongoDB: [...newMongoItem] });\n          })\n          .catch(function (error) {\n            console.log(\"ERROR IN REACT EDIT MONGO NOTE\", error);\n          })\n      }\n    }\n  }\n\n  /* REMOVE MONGO */\n  removeItemMongo = (data) => {\n    axios.delete('https://notemacher.herokuapp.com/notes', { data })\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT REMOVE MONGO NOTE\", error);\n      })\n  }\n\n  /* SEARCH MONGO */\n  // https://stackoverflow.com/questions/37401635/react-js-wait-for-setstate-to-finish-before-triggering-a-function\n  searchMongoFunction = (e) => {\n    axios.get('https://notemacher.herokuapp.com/notes')\n      .then(res => {\n        this.setState({\n          mongoDB: [...res.data],\n          searchValue: e.target.value.length,\n        },\n          () => {\n            this.setState({\n              mongoDB: this.state.mongoDB.filter(obj => obj.title.toLowerCase().includes(e.target.value.toLowerCase()) || obj.content.toLowerCase().includes(e.target.value.toLowerCase())),\n            })\n          })\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN componentSearch: \", error)\n      })\n    console.log(this.state.searchValue, this.state.mongoDB)\n  }\n\n  /*--- APP BODY ---*/\n\n  render() {\n    const { isEditOpen } = this.state\n    const { isEditOpenMongo } = this.state\n    const { isCreateOpenMongo } = this.state\n    const { isCreateOpenJSON } = this.state\n\n    return (\n      <>\n        <header className=\"header\">\n          <h2>_notemacher</h2>\n          <nav className=\"navgh\">\n            <ul>\n              <li><a href=\"https://tdudkowski.github.io/\">[ to Github Page ]</a></li>\n              <li><a href=\"https://github.com/tdudkowski/notemacher\">[ repo of _notemacher ]</a></li>\n              <li><button onClick={this.openCreateJSON}>ADD JSON Note</button></li>\n              <li><button onClick={this.openCreateMongo}>ADD mongoDB Note</button></li>\n            </ul>\n          </nav>\n          <div className=\"search\">\n            <input type=\"text\" name=\"notes\" placeholder=\"search Mongo\" onChange={this.searchMongoFunction} />\n            <h3>type to search</h3>\n          </div>\n        </header>\n        <main>\n          <article className=\"listNotes\">\n            <h3>JSON Notes</h3>\n\n            {this.state.notesJSON.map(item => (\n              <ListItemJSON key={item.id} {...item} open={this.openEdit} deleteIt={this.removeItem} />\n            ))}\n\n            <hr />\n\n            <h3>MongoDB Notes</h3>\n            {this.mongoNotes().length ? this.mongoNotes() : <div className=\"infoOnMongo\">\n              <p>If you are seeing this info, there're a few possibilities:</p>\n              <ul>\n                <li>Your search returned no results (aka result is empty)</li>\n                <li>Notes are not yet loaded, connection to database usually takes a moment (but not enough long to read it comfortably)</li>\n                <li>Database is empty now, in this case please use \"ADD mongoDB Note\" button to create one</li>\n              </ul>\n\n            </div>}\n          </article>\n\n          {isEditOpen && <div className=\"edit\">\n            <header>\n              <h3>Edit JSON Note - note id: {this.state.id}</h3>\n              <button onClick={this.closeEdit}>CLOSE</button>\n            </header>\n            <Form edit id={this.state.id} changeFunction={this.editItem} array={this.state.notesJSON}\n              stateContentVal={this.state.stateContentVal} close={this.closeEdit} />\n          </div>}\n\n\n          {isCreateOpenJSON && <div className=\"edit\">\n            <header><h3>Add a JSON note</h3>\n              <button onClick={this.closeCreateJSON}>CLOSE</button>\n            </header>\n            <Form add addFunction={this.addItem} />\n          </div>}\n\n\n          {isEditOpenMongo && <div className=\"edit\">\n            <header>\n              <h3>Edit Mongo - note id: {this.state.id}</h3>\n              <button className=\"big\" onClick={this.closeEditMongo}>CLOSE</button>\n            </header>\n            <FormEditMongo\n              edit\n              id={this.state.id}\n              changeFunctionMongo={this.editItemMongo}\n              changeMongoFn={this.editItemMongo}\n              array={this.state.mongoDB}\n              stateTitleVal={this.state.stateTitleMongoVal}\n              stateContentVal={this.state.stateContentMongoVal}\n              editMongoTime={this.state.editMongoTime}\n              userMongoID={this.state.userMongoID}\n              close={this.closeEditMongo}\n            />\n          </div>}\n\n          {isCreateOpenMongo && <div className=\"edit\">\n            <header><h3>Add a Mongo Note</h3>\n              <button className=\"big\" onClick={this.closeCreateMongo}>CLOSE</button>\n            </header>\n            <FormAddMongo addMongoFunction={this.addItemMongo} close={this.closeEditMongo} />\n          </div>}\n\n          <aside>\n\n            <h3>_notemacher</h3>\n            <p>Two kinds of Notes:</p>\n            <ul>\n              <li><strong>JSON Notes</strong> kept in local React file</li>\n              <li><strong>mongoDB Notes</strong> from mongoDB Atlas served by Node.js API</li>\n            </ul>\n            <p>Search function is working only for mongoDB Notes. JSON Notes are kept only for a testing purposes.</p>\n            <p>Search function is still not fully working. For now it takes an HTML form of Note, not reduced text. That means any search going out of the same format of text fails.</p>\n            <p>Stack:</p>\n            <ul>\n              <li>Draft.js</li>\n              <li>React 17 + hooks (Github)</li>\n              <li>async, fetch, axios</li>\n              <li>Node.js + Express (Heroku)</li>\n              <li>mongoDB (MongoDB Atlas)</li>\n            </ul>\n            <hr />\n            <h3>Fetch</h3>\n            <p>(state component) Data fetched from NBP API, ratio to Polish PLN</p>\n\n            <table className=\"tableFetch\">\n              <tr><th>Currency</th><th>Ratio</th></tr>\n              <tr><td>Euro</td><td>{this.state.euro}</td></tr>\n              <tr><td>US Dollar</td><td>{this.state.dollar}</td></tr>\n            </table>\n\n            <FetchFn />\n          </aside>\n        </main>\n        <footer>\n          <p>\n            _notemacher @2020\n          </p>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nmodule.hot.accept();\n\nreportWebVitals();\n"],"sourceRoot":""}