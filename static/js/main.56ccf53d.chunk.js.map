{"version":3,"sources":["reportWebVitals.js","DataMongo.js","ListItemJSON.js","Form.js","FormEditMongo.js","FormAddMongo.js","Fetch.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DataMongo","obj","open","deleteMongoItem","handleClickCategory","key","id","blocksFromHTML","convertFromHTML","content","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","className","onClick","title","dateCreation","author","dateEdit","editor","undefined","categories","map","item","length","listCategories","readOnly","ListItemJSON","deleteIt","e","Form","x","y","addFunction","changeFunction","edit","add","close","i","Data","useState","createFromText","setEditorState","titleVal","setTitleVal","contentVal","setContentVal","addValues","handleSubmit","createEmpty","onChange","contentState","getCurrentContent","firstLine","getPlainText","contentChange","autoComplete","onSubmit","htmlFor","type","name","target","value","required","handleKeyCommand","command","newState","RichUtils","staticToolbarPlugin","createToolbarPlugin","Toolbar","plugins","FormEditMongo","changeMongoFn","editMongoTime","userMongoID","stateCategoriesVal","stateTitleVal","stateContentVal","toString","categoriesVal","setCategoriesVal","stateToHTML","arrEffect","Array","from","split","editorStyles","externalProps","FormAddMongo","addMongoFunction","console","log","FetchFn","data","setData","useEffect","a","fetch","weatherWroclaw","json","weatherWroclawData","Wroclaw","properties","timeseries","instant","details","air_temperature","weatherJerozolima","weatherJerozolimaData","Jerozolima","weatherTokio","weatherTokioData","Tokio","weatherAddisAbeba","weatherAddisAbebaData","AddisAbeba","fetchData","CONNECTION","App","notesJSON","isEditOpenJSON","isEditOpenMongo","isCreateOpenMongo","isCreateOpenJSON","nbpdata","euro","dollar","ratio","stateContentJSONVal","stateContentMongoVal","stateTitleMongoVal","mongoDB","mongoDBArchive","searchValue","searchValueLength","categoriesSelected","reloadStuff","openCreateJSON","setState","closeCreateJSON","openEdit","thisContent","filter","closeEdit","addItem","preventDefault","Date","toISOString","slice","hrEdit","toLocaleTimeString","aMoment","newItem","String","concat","prevState","push","reset","editItem","removeItem","splice","searchFunction","foundList","openCreateMongo","closeCreateMongo","closeEditMongo","addItemMongo","newMongoItem","axios","post","res","catch","error","openEditMongo","thisTitle","thisCategories","editItemMongo","changedMongoItem","_id","newStateNotes","put","removeItemMongo","delete","searchMongoFunction","searchedValue","toLowerCase","searchData","includes","itemContent","replaceAll","document","getElementsByClassName","classList","handleInput","remove","restoreList","searchInstant","response1","this","get","geld","rates","mid","href","placeholder","mongoNotes","array","changeFunctionMongo","Fetch","React","Component","ReactDOM","render","StrictMode","getElementById","module","hot","accept"],"mappings":"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","file":"static/js/main.56ccf53d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Editor, EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst DataMongo = ({ obj, open, deleteMongoItem, handleClickCategory }) => {\n    // console.log(obj.id)\n    const key = obj.id\n    const blocksFromHTML = convertFromHTML(obj.content);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const editorState = EditorState.createWithContent(state)\n\n    const listCategories = () => {\n        if (obj.categories !== undefined) {\n            const arr = obj.categories\n            return arr.map(item => item.length > 0 && <button className=\"categories\" onClick={() => handleClickCategory(item)}>{item}</button>)\n        }\n    }\n\n    return (\n        <div key={key} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {obj.id}</span>\n                    <button onClick={() => open(obj.id)}>edit</button>\n                    <button onClick={() => deleteMongoItem()}>delete</button>\n                </div>\n                <h4>{obj.title} </h4>\n                <p className=\"noteInfo\"><span>Created: {obj.dateCreation} by {obj.author}</span> | <span>{obj.dateEdit ? `Last edit: ${obj.dateEdit} by: ${obj.editor} ` : `unedited`}</span></p>\n                <p>Categories: {listCategories()}</p>\n            </header>\n            <Editor\n                editorState={editorState}\n                readOnly={true}\n            />\n        </div >\n    );\n}\n\nexport default DataMongo;","import PropTypes from \"prop-types\"\n\nconst ListItemJSON = ({ id, title, author, editor, dateCreation, dateEdit, content, open, deleteIt }) => {\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {id}</span>\n                    <button onClick={() => open(id)}>edit</button>\n                    <button onClick={(e) => deleteIt(id)}>delete</button>\n                </div>\n                <h4>{title}</h4>\n                <p className=\"noteInfo\"><span>Created: {dateCreation} by {author}</span> | <span>{dateEdit ? `Last edit: ${dateEdit} by: ${editor} ` : `unedited`}</span></p>\n            </header>\n            <div className=\"content\">{content}</div>\n        </div >\n    )\n}\n\nListItemJSON.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n}\nexport default ListItemJSON","import { useState } from \"react\"\nimport Data from './notesArrayJSON.json'\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst Form = ({ addFunction, changeFunction, edit, add, close, id }) => {\n\n    let x, y\n\n    if (edit) {\n        for (let i = 0; i < Data.length; i++) {\n            if (Data[i].id === id) {\n                x = Data[i].title\n                y = Data[i].content\n            }\n        }\n    } else {\n        x = \"\"\n        y = \"\"\n    }\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(ContentState.createFromText(y)))\n    const [titleVal, setTitleVal] = useState(x)\n    const [contentVal, setContentVal] = useState(y)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n\n        let firstLine = contentState.getPlainText('\\u000A')\n        setContentVal(firstLine)\n        setEditorState(editorState)\n    }\n\n    const resetState = () => {\n        setTitleVal(\"\")\n        setContentVal(\"\")\n        setEditorState(() => EditorState.createEmpty())\n    }\n\n    const addValues = (e, id) => {\n        changeFunction(e, id, titleVal, contentVal)\n        close()\n    }\n\n    const handleSubmit = (e, contentVal) => {\n        if (edit) {\n            addValues(e, id, contentVal)\n            setEditorState(contentVal)\n        }\n        else {\n            addFunction(e, contentVal)\n            resetState()\n        }\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button className=\"big\" type=\"submit\">{add ? \"ADD\" : \"SAVE\"}</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import { useState } from \"react\"\nimport { EditorState, RichUtils, ContentState, convertFromHTML } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormEditMongo = ({ changeMongoFn, id, close, editMongoTime, userMongoID, stateCategoriesVal, stateTitleVal, stateContentVal }) => {\n\n    const blocksFromHTML = convertFromHTML(stateContentVal);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state))\n    const [titleVal, setTitleVal] = useState(stateTitleVal)\n    const [categoriesVal, setCategoriesVal] = useState([stateCategoriesVal, \"\"].toString(\", \"))\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const categoriesChange = (e) => {\n        // setCategoriesVal(categoriesVal => categoriesVal.concat(e.target.value))\n        // setCategoriesVal([...categoriesVal, e.target.value])\n        setCategoriesVal(e.target.value)\n        // console.log(\"STATE: \", stateCategoriesVal, \"CATVAL: \", categoriesVal)\n    }\n\n    const onChange = (editorState) => {\n        setEditorState(editorState);\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n    }\n\n    const handleSubmit = (e, titleVal) => {\n        const arrEffect = Array.from(categoriesVal.split(\",\"))\n        setCategoriesVal(Array.from(categoriesVal.split(\",\")))\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n        changeMongoFn(e, id, titleVal, stateContentVal, arrEffect, editMongoTime, userMongoID);\n        // console.log(stateCategoriesVal, categoriesVal, arrEffect)\n        close()\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    // focus = () => { editor.focus(); };\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal)}>\n            <label htmlFor=\"title\">{\"Title of [ \" + id + \" ]\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n            <button className=\"big\" type=\"submit\">SAVE</button>\n            <label htmlFor=\"categories\">{\"Categories of [ \" + [stateCategoriesVal] + \" ]\"}</label>\n            <input type=\"text\" name=\"categories\" id=\"categories\" onChange={categoriesChange} value={categoriesVal} />\n            <h4>Result of EDIT</h4>\n            <p>Title: {titleVal}</p>\n            <p>Edit time: {editMongoTime}</p>\n            <p>Editor: {userMongoID}</p>\n            <p>StateCategories: {[stateCategoriesVal]}</p>\n            <p>Categories: {categoriesVal}</p>\n        </form>\n    )\n}\n\nexport default FormEditMongo","import { useState } from \"react\"\nimport { EditorState, RichUtils } from 'draft-js'\nimport Editor from 'draft-js-plugins-editor'\nimport 'draft-js/dist/Draft.css'\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css'\nimport createToolbarPlugin, { Separator } from 'draft-js-static-toolbar-plugin';\nimport editorStyles from './editorStyles.css'\nimport {\n    ItalicButton,\n    BoldButton,\n    UnderlineButton,\n    CodeButton,\n    HeadlineOneButton,\n    HeadlineTwoButton,\n    HeadlineThreeButton,\n    UnorderedListButton,\n    OrderedListButton,\n    BlockquoteButton,\n    CodeBlockButton,\n} from 'draft-js-buttons';\nimport { stateToHTML } from 'draft-js-export-html'\n\n// https://www.draft-js-plugins.com/plugin/static-toolbar\n\nconst staticToolbarPlugin = createToolbarPlugin();\nconst { Toolbar } = staticToolbarPlugin;\nconst plugins = [staticToolbarPlugin];\n\nconst FormAddMongo = ({ addMongoFunction, edit, close, id }) => {\n\n    const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n    const [titleVal, setTitleVal] = useState(\"\")\n    const [contentVal, setContentVal] = useState(\"\")\n    const [categoriesVal, setCategoriesVal] = useState([])\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n        let content = stateToHTML(contentState)\n        setContentVal(content)\n        setEditorState(editorState)\n    }\n\n    const categoriesChange = (e) => {\n        // setCategoriesVal(categoriesVal => categoriesVal.concat(e.target.value))\n        // setCategoriesVal([...categoriesVal, e.target.value])\n        setCategoriesVal(e.target.value)\n        console.log(\"ADD1 categories\", categoriesVal)\n        // console.log(\"TEST: \", Array.from(categoriesVal.split(\",\").trim()))\n        // console.log(\"CATVAL: \", categoriesVal)\n    }\n\n    const handleSubmit = (e, titleVal, contentVal) => {\n        let arrEffect = []\n        if (categoriesVal.length) {\n            arrEffect = Array.from(categoriesVal.split(\",\"))\n        }\n        addMongoFunction(e, titleVal, contentVal, arrEffect)\n        close()\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className={editorStyles.editor}\n            // onClick={focus}\n            >\n                <Toolbar>\n                    {\n                        // may be use React.Fragment instead of div to improve perfomance after React 16\n                        (externalProps) => (\n                            <div>\n                                <BoldButton {...externalProps} />\n                                <ItalicButton {...externalProps} />\n                                <UnderlineButton {...externalProps} />\n                                <CodeButton {...externalProps} />\n                                <Separator {...externalProps} />\n                                <HeadlineOneButton {...externalProps} />\n                                <HeadlineTwoButton {...externalProps} />\n                                <HeadlineThreeButton {...externalProps} />\n                                <UnorderedListButton {...externalProps} />\n                                <OrderedListButton {...externalProps} />\n                                <BlockquoteButton {...externalProps} />\n                                <CodeBlockButton {...externalProps} />\n                            </div>\n                        )\n                    }\n                </Toolbar>\n                <Editor editorState={editorState}\n                    onChange={onChange}\n                    handleKeyCommand={handleKeyCommand}\n                    plugins={plugins}\n                // ref={(element) => { editor = element; }}\n                />\n            </div>\n            <label htmlFor=\"categories\">{\"Categories of\"}</label>\n            <input type=\"text\" name=\"categories\" id=\"categories\" onChange={categoriesChange} value={categoriesVal} />\n            <button className=\"big\" type=\"submit\">ADD</button>\n\n        </form>\n    )\n}\n\nexport default FormAddMongo","import { useState, useEffect } from \"react\"\n\nconst FetchFn = () => {\n    const [data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const weatherWroclaw = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=51.06&lon=17.01')\n            const weatherWroclawData = await weatherWroclaw.json()\n            const Wroclaw = weatherWroclawData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherJerozolima = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=31.47&lon=35.13')\n            const weatherJerozolimaData = await weatherJerozolima.json()\n            const Jerozolima = weatherJerozolimaData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherTokio = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=35.41&lon=139.41')\n            const weatherTokioData = await weatherTokio.json()\n            const Tokio = weatherTokioData.properties.timeseries[0].data.instant.details.air_temperature\n            const weatherAddisAbeba = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=9.1&lon=38.44')\n            const weatherAddisAbebaData = await weatherAddisAbeba.json()\n            const AddisAbeba = weatherAddisAbebaData.properties.timeseries[0].data.instant.details.air_temperature\n            setData([Wroclaw, Jerozolima, Tokio, AddisAbeba])\n        }\n        fetchData()\n    }, [])\n\n    return (<>\n\n        <p>(functional component w/ hooks useState and useEffect) Data fetched from Meteorologisk institutt:</p>\n\n        <table className=\"tableFetch\">\n            <thead><tr><th>City</th><th>Temperature now</th></tr></thead>\n            <tbody>\n                <tr><td>Wrocław</td><td>{data[0]} °C</td></tr>\n                <tr><td>יְרוּשָׁלַיִם‎</td><td>{data[1]} °C</td></tr>\n                <tr><td>東京</td><td>{data[2]} °C</td></tr>\n                <tr><td>አዲስ አበባ</td><td>{data[3]} °C</td></tr>\n            </tbody>\n        </table>\n    </>)\n}\nexport default FetchFn","import React from \"react\"\nimport axios from 'axios'\nimport DataMongo from \"./DataMongo\"\nimport ListItemJSON from \"./ListItemJSON\"\nimport Form from \"./Form\"\nimport FormEditMongo from \"./FormEditMongo\"\nimport FormAddMongo from \"./FormAddMongo\"\nimport Data from './notesArrayJSON.json'\nimport FetchFn from \"./Fetch\"\nimport \"./style.css\"\n\nconst CONNECTION = \"http://localhost:5000/notes\"\n// const CONNECTION = 'https://notemacher.herokuapp.com/notes'\n\nclass App extends React.Component {\n\n  state = {\n    notesJSON: [...Data],\n    isEditOpenJSON: false,\n    isEditOpenMongo: false,\n    isCreateOpenMongo: false,\n    isCreateOpenJSON: false,\n    id: \"\",\n    nbpdata: null,\n    euro: null,\n    dollar: null,\n    ratio: null,\n    stateContentJSONVal: null,\n    stateContentMongoVal: null,\n    stateTitleMongoVal: null,\n    stateCategoriesVal: null,\n    editMongoTime: null,\n    userMongoID: null,\n    mongoDB: [],\n    mongoDBArchive: [],\n    searchValue: null,\n    searchValueLength: 0,\n    categoriesSelected: null,\n    reloadStuff: true,\n  }\n\n  async componentDidMount() {\n    const response1 = await fetch('https://api.nbp.pl/api/exchangerates/tables/a')\n\n    if (this.state.reloadStuff) {\n      axios.get(CONNECTION)\n\n        .then(res => {\n          this.setState({ mongoDB: [...res.data], mongoDBArchive: [...res.data], });\n        })\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidMount: \", error);\n        })\n    }\n    const geld = await response1.json()\n\n    this.setState({\n      nbpdata: [...geld],\n      euro: [...geld][0].rates[7].mid,\n      dollar: [...geld][0].rates[1].mid,\n    })\n  }\n\n  async componentDidUpdate() {\n    if (this.state.reloadStuff) {\n      axios.get(CONNECTION)\n        .then(res => {\n          this.setState({ mongoDB: [...res.data], mongoDBArchive: [...res.data], });\n        })\n        .catch(function (error) {\n          console.log(\"ERROR IN componentDidUpdate: \", error);\n        })\n    }\n  }\n\n  /*--- JSON ----*/\n\n  /* OPEN CREATE JSON */\n  openCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: true,\n    })\n  }\n\n  /* CLOSE CREATE JSON */\n  closeCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: false,\n    })\n  }\n\n  /* OPEN EDIT JSON */\n  openEdit = (id) => {\n    const thisContent = this.state.notesJSON.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpenJSON: true,\n      id: id,\n      stateContentJSONVal: thisContent\n    })\n  }\n\n  /* CLOSE EDIT JSON */\n  closeEdit = () => {\n    this.setState({\n      isEditOpenJSON: false,\n    })\n  }\n\n  /* ADD JSON */\n  addItem = (e, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newItem = {\n      id: String(e.target[0].value.slice(0, 10).concat(Data.length + 1)),\n      dateCreation: aMoment,\n      title: e.target[0].value,\n      content: contentVal,\n      author: e.target[0].author || \"anon\"\n    }\n\n    this.setState(prevState => ({\n      notesJSON: [...prevState.notesJSON, newItem],\n      isCreateOpenJSON: false,\n    }))\n    Data.push(newItem)\n    e.target.reset()\n  }\n\n  /* EDIT JSON */\n  editItem = (e, id, titleVal, contentVal) => {\n    e.preventDefault()\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data[i].dateEdit = aMoment\n        Data[i].title = titleVal\n        Data[i].content = contentVal\n        Data[i].editor = e.target[0].editor || \"anon\"\n      }\n    }\n    this.setState({\n      notesJSON: [...Data],\n    })\n  }\n\n  /* REMOVE JSON */\n  removeItem = (id) => {\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data.splice(i, 1)\n      }\n    }\n    this.setState({ notesJSON: [...Data] })\n  }\n\n  /* SEARCH JSON */\n  searchFunction = (foundList) => {\n    this.setState({\n      notesJSON: foundList\n    })\n  }\n\n  /*--- MONGO ---*/\n\n  /* MONGO LIST */\n  mongoNotes() {\n    if (!this.state.reloadStuff) {\n      return this.state.searchValue.map((data, id) => {\n        return <DataMongo obj={data} key={data.id} open={this.openEditMongo}\n          deleteMongoItem={() => this.removeItemMongo(data)} handleClickCategory={this.handleClickCategory} />\n      });\n    }\n    else {\n      return this.state.mongoDB.map((data, id) => {\n        return <DataMongo obj={data} key={data.id} open={this.openEditMongo}\n          deleteMongoItem={() => this.removeItemMongo(data)} handleClickCategory={this.handleClickCategory} />\n      });\n    }\n  }\n\n  /* OPEN CREATE MONGO */\n  openCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: true,\n    })\n  }\n\n  /* CLOSE CREATE MONGO */\n  closeCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* CLOSE EDIT MONGO */\n  closeEditMongo = () => {\n    this.setState({\n      isEditOpenMongo: false,\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* ADD MONGO */\n  addItemMongo = (e, titleVal, contentVal, arrEffect) => {\n    e.preventDefault()\n    console.log(\"APP : \", arrEffect)\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newMongoItem = {\n      id: String(titleVal.slice(0, 10).concat(this.state.mongoDB.length + 1)),\n      dateCreation: aMoment,\n      title: titleVal,\n      content: contentVal,\n      author: \"anon\",\n      categories: arrEffect\n    }\n\n    axios.post(CONNECTION, newMongoItem)\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT APP AAD MONGO NOTE\", error);\n      })\n\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* OPEN EDIT MONGO */\n  openEditMongo = (id) => {\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    const thisUser = \"anon\"\n    const thisTitle = this.state.mongoDB.filter(item => item.id === id)[0].title\n    const thisContent = this.state.mongoDB.filter(item => item.id === id)[0].content\n    const thisCategories = this.state.mongoDB.filter(item => item.id === id)[0].categories\n    this.setState({\n      isEditOpenMongo: true,\n      id: id,\n      stateTitleMongoVal: thisTitle,\n      stateContentMongoVal: thisContent,\n      editMongoTime: aMoment,\n      userMongoID: thisUser,\n      stateCategoriesVal: thisCategories\n    })\n  }\n\n  /* SAVE EDITED MONGO */\n  editItemMongo = (e, id, titleVal, contentVal, arrEffect, editMongoTime, userMongoID) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    for (let i = 0; i < this.state.mongoDB.length; i++) {\n      if (this.state.mongoDB[i].id === id) {\n        const changedMongoItem = {\n          _id: this.state.mongoDB[i]._id,\n          id: this.state.mongoDB[i].id,\n          dateCreation: this.state.mongoDB[i].dateCreation,\n          author: this.state.mongoDB[i].author,\n          dateEdit: aMoment,\n          title: titleVal,\n          content: contentVal,\n          editor: \"anon\",\n          categories: arrEffect\n        }\n\n        const newStateNotes = this.state.mongoDB\n        newStateNotes.splice(i, 1, changedMongoItem)\n\n        // this.setState({\n        //   mongoDB: newStateNotes,\n        //   isCreateOpenMongo: false,\n        // })\n\n        axios.put(CONNECTION, changedMongoItem)\n          .then(res => {\n            this.setState({\n              mongoDB: newStateNotes,\n              isCreateOpenMongo: false,\n            });\n          })\n          .catch(function (error) {\n            console.log(\"ERROR IN REACT EDIT MONGO NOTE\", error);\n          })\n      }\n    }\n  }\n\n  /* REMOVE MONGO */\n  removeItemMongo = (data) => {\n    axios.delete(CONNECTION, { data })\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT REMOVE MONGO NOTE\", error);\n      })\n  }\n\n  /* SEARCH MONGO */\n  // https://stackoverflow.com/questions/37401635/react-js-wait-for-setstate-to-finish-before-triggering-a-function\n  // https://stackoverflow.com/questions/3790681/regular-expression-to-remove-html-tags\n  // https://digitalfortress.tech/tricks/top-15-commonly-used-regex/\n  searchMongoFunction = (e) => {\n    e.preventDefault()\n\n    const removedHTML = (itemContent) => itemContent.toLowerCase().replaceAll(/<\\/?[\\w\\s]*>|<.+[\\W]>/g, \"\")\n    const searchedValue = e.target[0].value.toLowerCase()\n    const searchData = this.state.mongoDBArchive.filter(obj => obj.title.toLowerCase().includes(searchedValue) || removedHTML(obj.content).includes(searchedValue) || obj.categories.toString().toLowerCase().includes(searchedValue))\n\n    this.setState({\n      searchValueLength: e.target[0].value.length,\n      reloadStuff: false,\n      mongoDB: searchData,\n      searchValue: searchData,\n    })\n    document.getElementsByClassName(\"searchResult\")[0].classList.add(\"result\")\n  }\n\n  handleInput = (e) => {\n    if (e.target.value.length === 0) {\n      this.setState({\n        searchValueLength: 0,\n      },\n        document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\"))\n    }\n  }\n\n  restoreList = () => {\n    this.setState({\n      reloadStuff: true,\n      searchValueLength: 0,\n      mongoDB: this.state.mongoDBArchive,\n      categoriesSelected: null,\n    })\n    document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\")\n  }\n\n  searchInstant = (e) => {\n    // const categoriesFlat = obj.categories.flat();\n    const removedHTML = (itemContent) => itemContent.toLowerCase().replaceAll(/<\\/?[\\w\\s]*>|<.+[\\W]>/g, \"\")\n    const searchedValue = e.target.value.toLowerCase()\n    const searchData = this.state.mongoDBArchive.filter(obj => obj.title.toLowerCase().includes(searchedValue) || removedHTML(obj.content).includes(searchedValue) || obj.categories.toString().toLowerCase().includes(searchedValue))\n\n    this.setState({\n      reloadStuff: false,\n      mongoDB: searchData,\n      searchValue: searchData,\n    })\n\n    if (e.target.value.length === 0) { document.getElementsByClassName(\"searchResult\")[0].classList.remove(\"result\") }\n    else {\n      document.getElementsByClassName(\"searchResult\")[0].classList.add(\"result\")\n    }\n    return searchData\n  }\n\n  /* CATEGORIES */\n\n  handleClickCategory = (item) => {\n\n    const searchedValue = this.state.mongoDBArchive.filter(obj => obj.categories.includes(item))\n    this.setState({\n      categoriesSelected: item,\n      searchValue: searchedValue,\n      reloadStuff: false,\n      // searchValueLength: 1,\n    })\n\n    console.log(item, this.state.categoriesSelected, searchedValue,)\n  }\n\n  /*--- APP BODY ---*/\n\n  render() {\n    const { isEditOpenJSON, isEditOpenMongo, isCreateOpenMongo, isCreateOpenJSON } = this.state\n\n    return (\n      <>\n        <header className=\"header\">\n          <h2>_notemacher</h2>\n          <nav className=\"navgh\">\n            <ul>\n              <li><a href=\"https://tdudkowski.github.io/\">[ to Github Page ]</a></li>\n              <li><a href=\"https://github.com/tdudkowski/notemacher\">[ repo of _notemacher ]</a></li>\n            </ul>\n            <ul>\n              <li><button onClick={this.openCreateJSON}>ADD JSON Note</button></li>\n              <li><button onClick={this.openCreateMongo}>ADD mongoDB Note</button></li>\n            </ul>\n          </nav>\n          <div className=\"search\">\n            <form onSubmit={(e) => this.searchMongoFunction(e)}>\n              <input type=\"text\" name=\"clickit\" id=\"clickit\" placeholder=\"search Mongo\"\n                onChange={this.handleInput}\n              />\n              <button className=\"big\" type=\"submit\">SEARCH</button>\n            </form>\n            <div>\n              <input type=\"text\" name=\"instant\" id=\"instant\" placeholder=\"search Mongo\"\n                onChange={(e) => this.searchInstant(e)}\n              />\n              <h3>type to search</h3>\n            </div></div>\n        </header>\n        <main>\n          <article className=\"listNotes\">\n            <h3>MongoDB Notes <span>(number of Notes: {this.state.mongoDBArchive.length})</span></h3>\n            <div className=\"searchResult\">\n              {this.state.searchValueLength ? <div><h4>Search mode</h4>\n                <p>Till <strong>search mode</strong> is on, you can add, remove, and edit notes, but with no visible effect. To close search mode you should empty both input fields or click the button below 'restore list'.</p>\n                <p>The search returned {this.mongoNotes().length} items | <button className=\"big\" onClick={this.restoreList}>Restore list</button></p></div> : null}\n              {this.state.categoriesSelected ? <div><p>Category searched: <strong>{this.state.categoriesSelected}</strong></p>\n                <p>Back to main view: <button className=\"big\" onClick={this.restoreList}>Restore list</button></p></div> : null}\n              {this.state.mongoDB.length ? this.mongoNotes() : <div className=\"infoOnMongo\">\n                <p>If you are seeing this info, there're a few possibilities:</p>\n                <ul>\n                  <li>Notes are not yet loaded, connection to database usually takes a moment (but not enough long to read it comfortably: ~3 seconds in maximum)</li>\n                  <li>Database is empty now, in this case please use \"ADD mongoDB Note\" button to create one</li>\n                </ul>\n              </div>}\n            </div>\n\n            <hr />\n\n            <h3>JSON Notes <span>(number of Notes: {this.state.notesJSON.length})</span></h3>\n\n            {this.state.notesJSON.map(item => (\n              <ListItemJSON key={item.id} {...item} open={this.openEdit} deleteIt={this.removeItem} />\n            ))}\n\n          </article>\n\n          {isEditOpenJSON && <div className=\"edit\">\n            <header>\n              <h3>Edit JSON Note - note id: {this.state.id}</h3>\n              <button className=\"big\" onClick={this.closeEdit}>CLOSE</button>\n            </header>\n            <Form edit id={this.state.id} changeFunction={this.editItem} array={this.state.notesJSON}\n              stateContentJSONVal={this.state.stateContentJSONVal} close={this.closeEdit} />\n          </div>}\n\n\n          {isCreateOpenJSON && <div className=\"edit\">\n            <header><h3>Add a JSON note</h3>\n              <button className=\"big\" onClick={this.closeCreateJSON}>CLOSE</button>\n            </header>\n            <Form add addFunction={this.addItem} />\n          </div>}\n\n\n          {isEditOpenMongo && <div className=\"edit\">\n            <header>\n              <h3>Edit Mongo - note id: {this.state.id}</h3>\n              <button className=\"big\" onClick={this.closeEditMongo}>CLOSE</button>\n            </header>\n            <FormEditMongo\n              edit\n              id={this.state.id}\n              changeFunctionMongo={this.editItemMongo}\n              changeMongoFn={this.editItemMongo}\n              array={this.state.mongoDB}\n              stateTitleVal={this.state.stateTitleMongoVal}\n              stateCategoriesVal={this.state.stateCategoriesVal}\n              stateContentVal={this.state.stateContentMongoVal}\n              editMongoTime={this.state.editMongoTime}\n              userMongoID={this.state.userMongoID}\n              close={this.closeEditMongo}\n            />\n          </div>}\n\n          {isCreateOpenMongo && <div className=\"edit\">\n            <header><h3>Add a Mongo Note</h3>\n              <button className=\"big\" onClick={this.closeCreateMongo}>CLOSE</button>\n            </header>\n            <FormAddMongo addMongoFunction={this.addItemMongo} close={this.closeEditMongo} />\n          </div>}\n\n          <aside>\n\n            <h3>_notemacher</h3>\n\n            <h4>Features</h4>\n            <ul>\n              <li><strong>Notes</strong> creating, deleting, and editing Notes are OK.</li>\n              <li><strong>Search</strong> works well in scope of one line - the same as in most usercases. There're two kinds of search, it still not decided which one is better and should stay.</li>\n              <li><strong>Categories</strong> searching in them is not case sensitive, but select by clicking them is. It's a feature or bug, it depends. I'm not sure if uppercase should be allowed in categories, or just leave it to user. But it works and is stable - so let call it ver 0.3.</li>\n            </ul>\n\n            <h4>Two kinds of Notes:</h4>\n            <ul>\n              <li><strong>mongoDB Notes</strong> from mongoDB Atlas served by Node.js API</li>\n              <li><strong>JSON Notes</strong> (below hr line) kept in local React file and browser's cache. I've started from it, but now they are kept only for a testing purposes.</li>\n            </ul>\n\n            <h4>Stack:</h4>\n            <ul>\n              <li>Draft.js</li>\n              <li>React 17 + hooks (Github)</li>\n              <li>async, fetch, axios</li>\n              <li>Node.js + Express (Heroku)</li>\n              <li>mongoDB (MongoDB Atlas)</li>\n            </ul>\n\n            <hr />\n            <h3>Fetch</h3>\n            <p>(state component) Data fetched from NBP API, ratio to Polish PLN</p>\n\n            <table className=\"tableFetch\">\n              <thead><tr><th>Currency</th><th>Ratio</th></tr></thead>\n              <tbody>\n                <tr><td>Euro</td><td>{this.state.euro}</td></tr>\n                <tr><td>US Dollar</td><td>{this.state.dollar}</td></tr>\n              </tbody>\n            </table>\n\n            <FetchFn />\n          </aside>\n        </main>\n        <footer>\n          <p>\n            _notemacher @2020\n          </p>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nmodule.hot.accept();\n\nreportWebVitals();\n"],"sourceRoot":""}