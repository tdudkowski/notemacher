{"version":3,"sources":["ListItemJSON.js","Form.js","Search.js","Fetch.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemJSON","id","title","author","editor","dateCreation","dateEdit","content","open","deleteIt","className","onClick","e","Form","x","y","addFunction","changeFunction","edit","close","stateContentVal","i","Data","length","useState","EditorState","createWithContent","ContentState","createFromText","editorState","setEditorState","titleVal","setTitleVal","contentVal","setContentVal","addValues","handleSubmit","createEmpty","onChange","contentState","convertToRaw","getCurrentContent","window","localStorage","setItem","JSON","stringify","saveContent","firstLine","blocks","text","contentChange","autoComplete","onSubmit","htmlFor","type","name","target","value","required","handleKeyCommand","command","newState","RichUtils","Search","searchFunction","foundList","filter","obj","toLowerCase","includes","FetchFn","data","setData","useEffect","a","fetch","response2","json","weather","properties","timeseries","instant","details","air_temperature","fetchData","App","state","notesJSON","isEditOpen","nbpdata","euro","dollar","ratio","temperatureInWroclaw","addItem","preventDefault","Date","toISOString","slice","hrEdit","toLocaleTimeString","aMoment","newItem","String","concat","setState","prevState","push","reset","removeItem","splice","editItem","openEdit","thisContent","item","closeEdit","response1","geld","ok","message","status","Error","this","rates","mid","href","restoreFunction","map","array","Fetch","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ff30ec9.chunk.js","sourcesContent":["// import { useState } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst ListItemJSON = ({ id, title, author, editor, dateCreation, dateEdit, content, open, deleteIt }) => {\n\n    // const [editorState, setEditorState] = useState(\n    //     () => EditorState.createEmpty(),\n    // );\n\n    return (\n        <div key={id} className=\"noteItem\">\n            <h4>{title}--{id}\n                <span>\n                    <button onClick={() => open(id)}>edit</button>\n                    <button onClick={(e) => deleteIt(id)}>delete</button>\n                </span>\n            </h4>\n            <p className=\"noteInfo\"><span>Created: {dateCreation} by {author}</span> | <span>{dateEdit ? `Last edit: ${dateEdit} by: ${editor} ` : `unedited`}</span></p>\n            <p>{content}</p>\n        </div >\n    )\n}\n\nListItemJSON.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n}\nexport default ListItemJSON","import { useState } from \"react\"\nimport Data from './notesArrayJSON.json'\nimport { Editor, EditorState, convertToRaw, RichUtils, ContentState } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst Form = ({ addFunction, changeFunction, edit, close, id, stateContentVal }) => {\n\n    let x, y\n\n    if (edit) {\n        for (let i = 0; i < Data.length; i++) {\n            if (Data[i].id === id) {\n                x = Data[i].title\n                y = Data[i].content\n            }\n        }\n    } else {\n        x = \"\"\n        y = \"\"\n    }\n\n    // const [editorState, setEditorState] = useState(\"\")\n    // EditorState.createWithContent(convertFromRaw(rawContent))\n    // const content = window.localStorage.getItem('content');\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(ContentState.createFromText(y)))\n    const [titleVal, setTitleVal] = useState(x)\n    const [contentVal, setContentVal] = useState(y)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentVal, editorState) => {\n        const firstLine = contentVal.blocks[0].text\n        setContentVal(firstLine)\n        // setEditorState(() => EditorState.createEmpty())\n        // onEditorChange(firstLine)\n        setEditorState(editorState)\n        // const dd = editorState.getCurrentContent();\n        // console.log(\"editorState.getCurrentContent(): \", dd, contentVal, editorState)\n    }\n\n    const resetState = () => {\n        setTitleVal(\"\")\n        setContentVal(\"\")\n        setEditorState(() => EditorState.createEmpty())\n    }\n\n    const addValues = (e, id) => {\n        // setEditorState()\n        changeFunction(e, id, titleVal, contentVal)\n        close()\n    }\n\n    const handleSubmit = (e, contentVal) => {\n        if (edit) {\n            addValues(e, id, contentVal)\n            setEditorState(contentVal)\n        }\n        else {\n            addFunction(e, contentVal)\n            resetState()\n        }\n    }\n\n    const saveContent = (contentState) => {\n        window.localStorage.setItem('content', JSON.stringify(contentState))\n        // console.log(\"JSON: \", JSON.stringify(contentState))\n    }\n\n    const onChange = editorState => {\n        const contentState = convertToRaw(editorState.getCurrentContent());\n        // console.log('inside draft component: ', convertToRaw(contentState).blocks[0].text)\n        // contentVal = convertToRaw(contentState)\n        // console.log(\"onChange \", editorState, contentState.blocks[0].text)\n        setEditorState(editorState)\n        saveContent(contentState)\n        contentChange(contentState, editorState)\n        // setContentVal(contentState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Text</label>\n\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button type=\"submit\">{edit ? \"SAVE\" : \"ADD\"}</button>\n                <h4>Result of {edit ? \"edit\" : \"add\"}</h4>\n                <p>Title: {titleVal}</p>\n                <p>Content: {contentVal}</p>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import Data from './notesArrayJSON.json'\n\nconst Search = ({ searchFunction }) => {\n\n    const handleInputValue = (e) => {\n        const foundList = Data.filter(obj => obj.title.toLowerCase().includes(e.target.value.toLowerCase()) || obj.content.toLowerCase().includes(e.target.value.toLowerCase()))\n        searchFunction(foundList)\n    }\n\n    return (\n        <div className=\"search\">\n            <input type=\"text\" name=\"notes\" onChange={handleInputValue} />\n            <h3>type to search</h3>\n        </div>\n    )\n}\n\nexport default Search","import { useState, useEffect } from \"react\"\n\nconst FetchFn = () => {\n    const [data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response2 = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=51.1&lon=17.0')\n            const weather = await response2.json()\n            setData(weather.properties.timeseries[0].data.instant.details.air_temperature)\n        }\n        fetchData()\n    }, [])\n\n    return (<p>(function component with hooks useState and useEffect) Fetched from Meteorologisk institutt: <strong>temperature in Wrocław {data}°C</strong></p>)\n}\n\nexport default FetchFn","import React from \"react\"\nimport ListItemJSON from \"./ListItemJSON\"\nimport Form from \"./Form\"\nimport Search from \"./Search\"\nimport \"./style.css\"\nimport Data from './notesArrayJSON.json'\nimport FetchFn from \"./Fetch\"\n\nclass App extends React.Component {\n\n  state = {\n    notesJSON: [...Data],\n    isEditOpen: false,\n    id: \"\",\n    nbpdata: null,\n    euro: null,\n    dollar: null,\n    ratio: null,\n    temperatureInWroclaw: null,\n    stateContentVal: null,\n  }\n\n  async componentDidMount() {\n    // gotData = () => {\n    // fetch('http://api.nbp.pl/api/exchangerates/tables/a')\n    //   .then(response => response.json())\n    //   .then(nbpdata => this.setState({ isLoaded: true, nbpdata }))\n    //   .then(nbpdata => { console.log('Success:', this.state.nbpdata) })\n    //   // .then((nbpdata) => nbpdata.length ? JSON.parse(nbpdata) : {})\n    //   .catch((error) => { console.error('Error:', error) })\n    const response1 = await fetch('https://api.nbp.pl/api/exchangerates/tables/a')\n    // const responseMongo = await fetch('mongodb+srv://NodeJSdbuser:anybtWW42aE7lWII@cluster0-nbaz8.mongodb.net/Articles')\n    const geld = await response1.json()\n\n    if (!response1.ok) {\n      const message = `An error has occured: ${response1.status}`;\n      throw new Error(message);\n    }\n\n    // if (!responseMongo.ok) {\n    //   const message = `A Mongo error has occured: ${responseMongo.status}`;\n    //   throw new Error(message);\n    // }\n    // console.log(responseMongo)\n    this.setState({\n      nbpdata: [...geld],\n      euro: [...geld][0].rates[7].mid,\n      dollar: [...geld][0].rates[1].mid,\n    })\n\n    // await mongoose.connect('mongodb+srv://NodeJSdbuser:anybtWW42aE7lWII@cluster0-nbaz8.mongodb.net/Articles', {\n    //   useNewUrlParser: true,\n    //   useUnifiedTopology: true,\n    //   // useFindAndModify: false,\n    //   // useCreateIndex: true\n    // });\n\n    // await mongoose.connect(process.env.NODE_DATABASE, { useNewUrlParser: true })\n    //   .then(() => {\n    //     console.log('Connected to DB');\n    //   })\n    //   .catch(error => {\n    //     console.error('Connection to DB Failed');\n    //     console.error(error.message);\n    //     process.exit(-1);\n    //   });\n    // mongoose.connect(process.env.NODE_DATABASE, { useNewUrlParser: true });\n    // autoIncrement.initialize(mongoose.connection);\n  }\n\n\n  // onChange = editorState => this.setState({ editorState });\n\n  /* EDIT */\n  addItem = (e, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newItem = {\n      id: String(e.target[0].value.concat(Data.length + 1)),\n      dateCreation: aMoment,\n      title: e.target[0].value,\n      content: contentVal,\n      author: e.target[0].author || \"anon\"\n    }\n\n    this.setState(prevState => ({\n      notesJSON: [...prevState.notesJSON, newItem],\n    }))\n    // console.log(\"in APP addItem: \", e, contentVal, newItem)\n    Data.push(newItem)\n    e.target.reset()\n  }\n\n  /* REMOVE */\n  removeItem = (id) => {\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data.splice(i, 1)\n      }\n    }\n    this.setState({ notesJSON: [...Data] })\n  }\n\n  // getAMoment = () => {\n  //   const dateEdit = new Date().toISOString().slice(0, 10)\n  //   const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n  //   const aMoment = `${dateEdit} - ${hrEdit}`\n  // }\n\n  /* EDIT */\n  editItem = (e, id, titleVal, contentVal) => {\n    e.preventDefault()\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data[i].dateEdit = aMoment\n        Data[i].title = titleVal\n        Data[i].content = contentVal\n        Data[i].editor = e.target[0].editor || \"anon\"\n      }\n    }\n    this.setState({\n      notesJSON: [...Data],\n    })\n    // e.target.reset()\n  }\n\n  /* OPEN */\n  openEdit = (id) => {\n    // console.log(\"openEdit \", this.state.notesJSON.filter(item => item.id === id)[0].content)\n    const thisContent = this.state.notesJSON.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpen: true,\n      id: id,\n      stateContentVal: thisContent\n    })\n  }\n\n  /* CLOSE */\n  closeEdit = () => {\n    this.setState({\n      isEditOpen: false,\n    })\n  }\n\n  /*SEARCH*/\n  searchFunction = (foundList) => {\n    this.setState({\n      notesJSON: foundList\n    })\n  }\n\n\n  render() {\n    const { isEditOpen } = this.state\n\n    return (\n      <>\n        <header>\n          <h2>_notemacher</h2>\n          <nav className=\"navgh\">\n            <ul>\n              <li><a href=\"https://tdudkowski.github.io/\">[ to Github Page ]</a></li>\n              <li><a href=\"https://github.com/tdudkowski/notemacher\">[ repo of _notemacher ]</a></li>\n            </ul>\n          </nav>\n          <Search restoreFunction={this.restoreFunction} searchFunction={this.searchFunction} />\n        </header>\n        <main>\n          <article className=\"listNotes\">\n            {/* <Editor editorState={this.state.editorState} onChange={this.onChange} /> */}\n            <h3>Notes</h3>\n            <hr />\n            {this.state.notesJSON.map(item => (\n              <ListItemJSON key={item.id} {...item} open={this.openEdit} deleteIt={this.removeItem} />\n\n            ))}\n            <hr />\n          </article>\n          {/* {isEditOpen && <Edit close={this.closeEdit} id={this.state.id} array={this.state.notesJSON} changeFunction={this.editItem} edit />} */}\n\n          {isEditOpen && <div className=\"edit\">\n            <header>\n              <h3>Edit - note id: {this.state.id}</h3>\n              <button onClick={this.closeEdit}>CLOSE</button>\n            </header>\n            <Form edit id={this.state.id} changeFunction={this.editItem} array={this.state.notesJSON}\n              stateContentVal={this.state.stateContentVal} close={this.closeEdit} />\n          </div>}\n\n\n          <aside>\n            <div>\n              <h3>Add a note</h3>\n              <Form addFunction={this.addItem} />\n            </div>\n          </aside>\n        </main>\n        <footer><p>_notemacher: React 17 + hooks + Draft.js + fetch (dirty edition, but it works)</p>\n          <hr />\n          <ul>\n            <li>(state component) Fetched from NBP API: <strong>Euro: {this.state.euro}; US Dollar: {this.state.dollar}</strong></li>\n            <li><FetchFn /></li>\n          </ul>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default App ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}