{"version":3,"sources":["ReactApp/DataMongo.js","ReactApp/ListItemJSON.js","ReactApp/Form.js","ReactApp/FormEditMongo.js","ReactApp/FormAddMongo.js","ReactApp/Search.js","ReactApp/Fetch.js","ReactApp/App.js","ReactApp/reportWebVitals.js","index.js"],"names":["DataMongo","obj","id","open","deleteMongoItem","blocksFromHTML","convertFromHTML","content","state","ContentState","createFromBlockArray","contentBlocks","entityMap","editorState","EditorState","createWithContent","className","onClick","title","dateCreation","author","dateEdit","editor","readOnly","ListItemJSON","deleteIt","e","Form","x","y","addFunction","changeFunction","edit","add","close","i","Data","length","useState","createFromText","setEditorState","titleVal","setTitleVal","contentVal","setContentVal","addValues","handleSubmit","createEmpty","onChange","contentState","getCurrentContent","firstLine","stateToHTML","contentChange","autoComplete","onSubmit","htmlFor","type","name","target","value","required","handleKeyCommand","command","newState","RichUtils","FormEditMongo","changeMongoFn","editMongoTime","userMongoID","stateTitleVal","stateContentVal","toggleInlineStyle","FormAddMongo","addMongoFunction","Search","searchFunction","foundList","filter","toLowerCase","includes","FetchFn","data","setData","useEffect","a","fetch","response2","json","weather","properties","timeseries","instant","details","air_temperature","fetchData","App","notesJSON","isEditOpen","isEditOpenMongo","isCreateOpenMongo","isCreateOpenJSON","nbpdata","euro","dollar","ratio","temperatureInWroclaw","stateContentMongoVal","stateTitleMongoVal","mongoDB","openCreateJSON","setState","closeCreateJSON","openEdit","thisContent","item","closeEdit","addItem","preventDefault","Date","toISOString","slice","hrEdit","toLocaleTimeString","aMoment","newItem","String","concat","prevState","push","reset","editItem","removeItem","splice","openCreateMongo","closeCreateMongo","closeEditMongo","addItemMongo","newMongoItem","axios","post","then","res","catch","error","console","log","openEditMongo","thisTitle","editItemMongo","changedMongoItem","_id","newStateNotes","put","removeItemMongo","delete","response1","get","geld","this","rates","mid","map","href","dataTable","array","changeFunctionMongo","Fetch","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a57ddf0.chunk.js","sourcesContent":["import { Editor, EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\n\nconst DataMongo = ({ obj, id, open, deleteMongoItem }) => {\n\n    const blocksFromHTML = convertFromHTML(obj.content);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const editorState = EditorState.createWithContent(state)\n\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {obj.id}</span>\n                    <button onClick={() => open(obj.id)}>edit</button>\n                    <button onClick={() => deleteMongoItem()}>delete</button>\n                </div>\n                <h4>{obj.title} </h4>\n                <p className=\"noteInfo\"><span>Created: {obj.dateCreation} by {obj.author}</span> | <span>{obj.dateEdit ? `Last edit: ${obj.dateEdit} by: ${obj.editor} ` : `unedited`}</span></p>\n            </header>\n            <Editor\n                editorState={editorState}\n                readOnly={true}\n            />\n        </div >\n    );\n}\n\nexport default DataMongo;","import PropTypes from \"prop-types\"\n\nconst ListItemJSON = ({ id, title, author, editor, dateCreation, dateEdit, content, open, deleteIt }) => {\n    return (\n        <div key={id} className=\"noteItem\">\n            <header>\n                <div className=\"note-id\">\n                    <span>note ID: {id}</span>\n                    <button onClick={() => open(id)}>edit</button>\n                    <button onClick={(e) => deleteIt(id)}>delete</button>\n                </div>\n                <h4>{title}</h4>\n                <p className=\"noteInfo\"><span>Created: {dateCreation} by {author}</span> | <span>{dateEdit ? `Last edit: ${dateEdit} by: ${editor} ` : `unedited`}</span></p>\n            </header>\n            <div className=\"content\">{content}</div>\n        </div >\n    )\n}\n\nListItemJSON.propTypes = {\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string,\n}\nexport default ListItemJSON","import { useState } from \"react\"\nimport Data from './notesArrayJSON.json'\nimport { Editor, EditorState, RichUtils, ContentState } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\nimport { stateToHTML } from 'draft-js-export-html'\n\nconst Form = ({ addFunction, changeFunction, edit, add, close, id }) => {\n\n    let x, y\n\n    if (edit) {\n        for (let i = 0; i < Data.length; i++) {\n            if (Data[i].id === id) {\n                x = Data[i].title\n                y = Data[i].content\n            }\n        }\n    } else {\n        x = \"\"\n        y = \"\"\n    }\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(ContentState.createFromText(y)))\n    const [titleVal, setTitleVal] = useState(x)\n    const [contentVal, setContentVal] = useState(y)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n\n        let firstLine = stateToHTML(contentState)\n        setContentVal(firstLine)\n        setEditorState(editorState)\n    }\n\n    const resetState = () => {\n        setTitleVal(\"\")\n        setContentVal(\"\")\n        setEditorState(() => EditorState.createEmpty())\n    }\n\n    const addValues = (e, id) => {\n        changeFunction(e, id, titleVal, contentVal)\n        close()\n    }\n\n    const handleSubmit = (e, contentVal) => {\n        if (edit) {\n            addValues(e, id, contentVal)\n            setEditorState(contentVal)\n        }\n        else {\n            addFunction(e, contentVal)\n            resetState()\n        }\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button type=\"submit\">{add ? \"ADD\" : \"SAVE\"}</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import { useState } from \"react\"\nimport { Editor, EditorState, RichUtils, ContentState, convertFromHTML } from 'draft-js'\nimport 'draft-js/dist/Draft.css'\nimport { stateToHTML } from 'draft-js-export-html'\n\nconst FormEditMongo = ({ changeMongoFn, id, close, editMongoTime, userMongoID, stateTitleVal, stateContentVal }) => {\n    const blocksFromHTML = convertFromHTML(stateContentVal);\n    const state = ContentState.createFromBlockArray(\n        blocksFromHTML.contentBlocks,\n        blocksFromHTML.entityMap,\n    );\n\n    const [editorState, setEditorState] = useState(() => EditorState.createWithContent(state))\n    const [titleVal, setTitleVal] = useState(stateTitleVal)\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const onChange = (editorState) => {\n        setEditorState(editorState);\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n    }\n\n    const handleSubmit = (e, titleVal) => {\n        stateContentVal = stateToHTML(editorState.getCurrentContent());\n        changeMongoFn(e, id, titleVal, stateContentVal, editMongoTime, userMongoID);\n        close()\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n\n    const onUnderlineClick = () => {\n        onChange(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n    }\n\n    const onBoldClick = () => {\n        onChange(RichUtils.toggleInlineStyle(editorState, 'BOLD'))\n    }\n\n    const onItalicClick = () => {\n        onChange(RichUtils.toggleInlineStyle(editorState, 'ITALIC'))\n    }\n\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal)}>\n            <label htmlFor=\"title\">{\"Title of [ \" + id + \" ]\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <div className=\"editorContainer\">\n                <button onClick={onUnderlineClick}>Underline</button>\n                <button onClick={onBoldClick}><b>Bold</b></button>\n                <button onClick={onItalicClick}><em>Italic</em></button>\n                <div className=\"editors\">\n                    <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\">SAVE</button>\n                <h4>Result of EDIT</h4>\n                <p>Title: {titleVal}</p>\n                <p>Edit time: {editMongoTime}</p>\n                <p>Editor: {userMongoID}</p>\n            </div>\n        </form>\n    )\n}\n\nexport default FormEditMongo","import { useState } from \"react\"\nimport { Editor, EditorState, RichUtils } from 'draft-js'\nimport { stateToHTML } from 'draft-js-export-html'\nimport 'draft-js/dist/Draft.css'\n\nconst FormAddMongo = ({ addMongoFunction, edit, close, id }) => {\n\n    const [editorState, setEditorState] = useState(() => EditorState.createEmpty())\n    const [titleVal, setTitleVal] = useState(\"\")\n    const [contentVal, setContentVal] = useState(\"\")\n\n    const titleChange = (e) => {\n        setTitleVal(e.target.value)\n    }\n\n    const contentChange = (contentState, editorState) => {\n        let content = stateToHTML(contentState)\n        setContentVal(content)\n        setEditorState(editorState)\n    }\n\n    const handleSubmit = (e, titleVal, contentVal) => {\n        addMongoFunction(e, titleVal, contentVal)\n        close()\n    }\n\n    const onChange = editorState => {\n        const contentState = editorState.getCurrentContent()\n        setEditorState(editorState)\n        contentChange(contentState, editorState)\n    }\n\n    const handleKeyCommand = (command) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            onChange(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n    return (\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => handleSubmit(e, titleVal, contentVal)}>\n            <label htmlFor=\"title\">{edit ? \"Title of [ \" + id + \" ]\" : \"Title\"}</label>\n            <input type=\"text\" name=\"title\" id=\"title\" onChange={titleChange} value={titleVal} required />\n            <label htmlFor=\"content\">Content</label>\n            <Editor editorState={editorState} onChange={onChange} handleKeyCommand={handleKeyCommand} />\n            <div>\n                <button type=\"submit\">ADD</button>\n            </div>\n        </form>\n    )\n}\n\nexport default FormAddMongo","import Data from './notesArrayJSON.json'\n\nconst Search = ({ searchFunction }) => {\n\n    const handleInputValue = (e) => {\n        const foundList = Data.filter(obj => obj.title.toLowerCase().includes(e.target.value.toLowerCase()) || obj.content.toLowerCase().includes(e.target.value.toLowerCase()))\n        searchFunction(foundList)\n    }\n\n    return (\n        <div className=\"search\">\n            <input type=\"text\" name=\"notes\" onChange={handleInputValue} />\n            <h3>type to search</h3>\n        </div>\n    )\n}\n\nexport default Search","import { useState, useEffect } from \"react\"\n\nconst FetchFn = () => {\n    const [data, setData] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response2 = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=51.1&lon=17.0')\n            const weather = await response2.json()\n            setData(weather.properties.timeseries[0].data.instant.details.air_temperature)\n        }\n        fetchData()\n    }, [])\n\n    return (<>(functional component w/ hooks useState and useEffect) Data fetched from Meteorologisk institutt:\n        <ul><li><strong>temperature in Wrocław {data}°C</strong></li></ul></>)\n}\n\nexport default FetchFn","import React from \"react\"\nimport axios from 'axios'\nimport DataMongo from \"./DataMongo\"\nimport ListItemJSON from \"./ListItemJSON\"\nimport Form from \"./Form\"\nimport FormEditMongo from \"./FormEditMongo\"\nimport FormAddMongo from \"./FormAddMongo\"\nimport Search from \"./Search\"\nimport Data from './notesArrayJSON.json'\nimport FetchFn from \"./Fetch\"\nimport \"./style.css\"\n\n// export const BASE_API_URL = ''\n\nclass App extends React.Component {\n\n  state = {\n    notesJSON: [...Data],\n    isEditOpen: false,\n    isEditOpenMongo: false,\n    isCreateOpenMongo: false,\n    isCreateOpenJSON: false,\n    id: \"\",\n    nbpdata: null,\n    euro: null,\n    dollar: null,\n    ratio: null,\n    temperatureInWroclaw: null,\n    stateContentVal: null,\n    stateContentMongoVal: null,\n    stateTitleMongoVal: null,\n    editMongoTime: null,\n    userMongoID: null,\n    mongoDB: [],\n  }\n\n  async componentDidMount() {\n    const response1 = await fetch('https://api.nbp.pl/api/exchangerates/tables/a')\n    axios.get('https://notemacher.herokuapp.com/notes')\n      // axios.get('http://localhost:5000/notes')\n\n      .then(res => {\n        this.setState({ mongoDB: [...res.data] });\n        console.log(res)\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN componentDidMount: \", error);\n      })\n    const geld = await response1.json()\n\n    this.setState({\n      nbpdata: [...geld],\n      euro: [...geld][0].rates[7].mid,\n      dollar: [...geld][0].rates[1].mid,\n    })\n  }\n\n  async componentDidUpdate() {\n    axios.get('https://notemacher.herokuapp.com/notes')\n      // axios.get('http://localhost:5000/notes')\n      .then(res => {\n        this.setState({ mongoDB: [...res.data] });\n        console.log(res)\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN componentDidUpdate: \", error);\n      })\n  }\n\n  /*--- JSON ----*/\n\n  /* OPEN CREATE JSON */\n  openCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: true,\n    })\n  }\n\n  /* CLOSE CREATE JSON */\n  closeCreateJSON = () => {\n    this.setState({\n      isCreateOpenJSON: false,\n    })\n  }\n\n  /* OPEN EDIT JSON */\n  openEdit = (id) => {\n    const thisContent = this.state.notesJSON.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpen: true,\n      id: id,\n      stateContentVal: thisContent\n    })\n  }\n\n  /* CLOSE EDIT JSON */\n  closeEdit = () => {\n    this.setState({\n      isEditOpen: false,\n    })\n  }\n\n  /* ADD JSON */\n  addItem = (e, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newItem = {\n      id: String(e.target[0].value.slice(0, 10).concat(Data.length + 1)),\n      dateCreation: aMoment,\n      title: e.target[0].value,\n      content: contentVal,\n      author: e.target[0].author || \"anon\"\n    }\n\n    this.setState(prevState => ({\n      notesJSON: [...prevState.notesJSON, newItem],\n      isCreateOpenJSON: false,\n    }))\n    Data.push(newItem)\n    e.target.reset()\n  }\n\n  /* EDIT JSON */\n  editItem = (e, id, titleVal, contentVal) => {\n    e.preventDefault()\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data[i].dateEdit = aMoment\n        Data[i].title = titleVal\n        Data[i].content = contentVal\n        Data[i].editor = e.target[0].editor || \"anon\"\n      }\n    }\n    this.setState({\n      notesJSON: [...Data],\n    })\n  }\n\n  /* REMOVE JSON */\n  removeItem = (id) => {\n    for (let i = 0; i < Data.length; i++) {\n      if (Data[i].id === id) {\n        Data.splice(i, 1)\n      }\n    }\n    this.setState({ notesJSON: [...Data] })\n  }\n\n  /* SEARCH JSON */\n  searchFunction = (foundList) => {\n    this.setState({\n      notesJSON: foundList\n    })\n  }\n\n  /*--- MONGO ---*/\n\n  /* MONGO LIST */\n  dataTable() {\n    return this.state.mongoDB.map((data, id) => {\n      return <DataMongo obj={data} key={id} open={this.openEditMongo}\n        deleteMongoItem={() => this.removeItemMongo(data)} />\n    });\n  }\n\n  /* OPEN CREATE MONGO */\n  openCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: true,\n    })\n  }\n\n  /* CLOSE CREATE MONGO */\n  closeCreateMongo = () => {\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* CLOSE EDIT MONGO */\n  closeEditMongo = () => {\n    this.setState({\n      isEditOpenMongo: false,\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* ADD MONGO */\n  addItemMongo = (e, titleVal, contentVal) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    const newMongoItem = {\n      id: String(titleVal.slice(0, 10).concat(this.state.mongoDB.length + 1)),\n      dateCreation: aMoment,\n      title: titleVal,\n      content: contentVal,\n      author: \"anon\"\n    }\n\n    axios.post('https://notemacher.herokuapp.com/notes', newMongoItem)\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT APP AAD MONGO NOTE\", error);\n      })\n\n    this.setState({\n      isCreateOpenMongo: false,\n    })\n  }\n\n  /* OPEN EDIT MONGO */\n  openEditMongo = (id) => {\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n    const thisUser = \"anon\"\n    const thisTitle = this.state.mongoDB.filter(item => item.id === id)[0].title\n    const thisContent = this.state.mongoDB.filter(item => item.id === id)[0].content\n    this.setState({\n      isEditOpenMongo: true,\n      id: id,\n      stateTitleMongoVal: thisTitle,\n      stateContentMongoVal: thisContent,\n      editMongoTime: aMoment,\n      userMongoID: thisUser,\n    })\n  }\n\n  /* SAVE EDITED MONGO */\n  editItemMongo = (e, id, titleVal, contentVal, editMongoTime, userMongoID) => {\n    e.preventDefault()\n\n    const dateEdit = new Date().toISOString().slice(0, 10)\n    const hrEdit = new Date().toLocaleTimeString(\"pl-PL\").slice(0, 5)\n    const aMoment = `${dateEdit} - ${hrEdit}`\n\n    for (let i = 0; i < this.state.mongoDB.length; i++) {\n      if (this.state.mongoDB[i].id === id) {\n        const changedMongoItem = {\n          _id: this.state.mongoDB[i]._id,\n          id: this.state.mongoDB[i].id,\n          dateCreation: this.state.mongoDB[i].dateCreation,\n          author: this.state.mongoDB[i].author,\n          dateEdit: aMoment,\n          title: titleVal,\n          content: contentVal,\n          editor: \"anon\"\n        }\n\n        const newStateNotes = this.state.mongoDB\n        newStateNotes.splice(i, 1, changedMongoItem)\n\n        this.setState({\n          mongoDB: newStateNotes,\n          isCreateOpenMongo: false,\n        })\n\n        axios.put('https://notemacher.herokuapp.com/notes', changedMongoItem)\n          .then(res => {\n            // this.setState({ mongoDB: [...newMongoItem] });\n          })\n          .catch(function (error) {\n            console.log(\"ERROR IN REACT EDIT MONGO NOTE\", error);\n          })\n      }\n    }\n  }\n\n  /* REMOVE MONGO */\n  removeItemMongo = (data) => {\n    axios.delete('http://localhost:5000/notes', { data })\n      .then(res => {\n        // this.setState({ mongoDB: [...newMongoItem] });\n      })\n      .catch(function (error) {\n        console.log(\"ERROR IN REACT REMOVE MONGO NOTE\", error);\n      })\n  }\n\n  /*--- APP BODY ---*/\n\n  render() {\n    const { isEditOpen } = this.state\n    const { isEditOpenMongo } = this.state\n    const { isCreateOpenMongo } = this.state\n    const { isCreateOpenJSON } = this.state\n\n    return (\n      <>\n        <header className=\"header\">\n          <h2>_notemacher</h2>\n          <nav className=\"navgh\">\n            <ul>\n              <li><a href=\"https://tdudkowski.github.io/\">[ to Github Page ]</a></li>\n              <li><a href=\"https://github.com/tdudkowski/notemacher\">[ repo of _notemacher ]</a></li>\n              <li><button onClick={this.openCreateJSON}>ADD JSON Note</button></li>\n              <li><button onClick={this.openCreateMongo}>ADD mongoDB Note</button></li>\n            </ul>\n          </nav>\n          <Search searchFunction={this.searchFunction} />\n        </header>\n        <main>\n          <article className=\"listNotes\">\n            <h3>JSON Notes</h3>\n\n            {this.state.notesJSON.map(item => (\n              <ListItemJSON key={item.id} {...item} open={this.openEdit} deleteIt={this.removeItem} />\n            ))}\n\n            <hr />\n\n            <h3>MongoDB Notes</h3>\n            {this.dataTable()}\n          </article>\n\n          {isEditOpen && <div className=\"edit\">\n            <header>\n              <h3>Edit JSON Note - note id: {this.state.id}</h3>\n              <button onClick={this.closeEdit}>CLOSE</button>\n            </header>\n            <Form edit id={this.state.id} changeFunction={this.editItem} array={this.state.notesJSON}\n              stateContentVal={this.state.stateContentVal} close={this.closeEdit} />\n          </div>}\n\n\n          {isCreateOpenJSON && <div className=\"edit\">\n            <header><h3>Add a JSON note</h3>\n              <button onClick={this.closeCreateJSON}>CLOSE</button>\n            </header>\n            <Form add addFunction={this.addItem} />\n          </div>}\n\n\n          {isEditOpenMongo && <div className=\"edit\">\n            <header>\n              <h3>Edit Mongo - note id: {this.state.id}</h3>\n              <button onClick={this.closeEditMongo}>CLOSE</button>\n            </header>\n            <FormEditMongo\n              edit\n              id={this.state.id}\n              changeFunctionMongo={this.editItemMongo}\n              changeMongoFn={this.editItemMongo}\n              array={this.state.mongoDB}\n              stateTitleVal={this.state.stateTitleMongoVal}\n              stateContentVal={this.state.stateContentMongoVal}\n              editMongoTime={this.state.editMongoTime}\n              userMongoID={this.state.userMongoID}\n              close={this.closeEditMongo}\n            />\n          </div>}\n\n          {isCreateOpenMongo && <div className=\"edit\">\n            <header><h3>Add a Mongo Note</h3>\n              <button onClick={this.closeCreateMongo}>CLOSE</button>\n            </header>\n            <FormAddMongo addMongoFunction={this.addItemMongo} close={this.closeEditMongo} />\n          </div>}\n\n\n          <aside>\n\n            <h3>_notemacher</h3>\n            <p>two kinds of Notes</p>\n            <ul>\n              <li><strong>JSON Notes</strong> kept in local React file</li>\n              <li><strong>mongoDB Notes</strong> from mongoDB Atlas served by Node.js API</li>\n            </ul>\n            <p>Search for now is only for JSON Notes</p>\n            <p>Stack:</p>\n            <ul>\n              <li>React 17 + hooks</li>\n              <li>async fetch</li>\n              <li>Draft.js</li>\n              <li>axios</li>\n              <li>Node.js + Express</li>\n              <li>mongoDB</li>\n            </ul>\n            <hr />\n            <h3>Fetch</h3>\n            <ul>\n              <li>(state component) Data fetched from NBP API:\n                <ul>\n                  <li><strong>Euro: {this.state.euro}</strong></li>\n                  <li><strong>US Dollar: {this.state.dollar}</strong></li>\n                </ul>\n              </li>\n              <li><FetchFn /></li>\n            </ul>\n          </aside>\n        </main>\n        <footer>\n          <p>\n            _notemacher @2020\n          </p>\n        </footer>\n      </>\n    )\n  }\n}\n\nexport default App ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './ReactApp/App';\nimport reportWebVitals from './ReactApp/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}